
üîé: Gibt es, m√ºssen wir aber nicht k√∂nnen

VL 1:

- Projekt: 
	- Def: .. eine f√ºr einenn befristeten Zeitraum geschaffene ORganisation, die mit dem Zweck eingerichetet wurde, ein oder mehrere Produkte in √úbereinstimmung mit einem vereinbartem Buisness Case zu liefern.
	- Def: Vorhaben, das im Wesentlichen durch Einmaligkeit der Bedingungen in ihrer Gesamtheit gekennzeichnet ist, wie z.B...(siehe Bedingungen)
		- Einmaligkeit --> Abgrenzung zu anderen Vorhaben: Gegenteil unternehmerischer Routine (Muss also zumindest f√ºr einen selber neu sein) 
	- Bedingungen/Projektmerkmale:	
		- Ziel/Inhalt (z.b. Bau-, IT-, Filmprojekte)
			- Ziele Beschreiben erw√ºnschte zuk√ºnftige Zust√§nde nach
				- Inhalt/Gegenstand (z.b. Rentabilit√§t)
				- Ausma√ü (z.b. 8%)
				- Zeitbezug (Jahr 2015)... (wann soll das ~iel erreicht sein)
			- SMART-Regel als empfohlene Orientierung
				- Spezifisch: Eindeutig definiert (m√∂glichst konkrete Formulierung des angestrebten enzustands)
				- Messbar: √úberpr√ºfbarkeit ob oder wie weit Ziel erreicht wurde)
				- Akzeptiert: von allen Empf√§ngern akyeptiert werden/sein (auch: angemessen, attraktiv, abgetimmt, ausf√ºhrbar/aktionsorientiert oder anspruchsvoll)
				- Realistisch: erreichbar sein
				- Terminiert: Zu jedem iel klare Terminvorgabe, bis wann erreicht sein muss
			- Zielausrichtung:
				- Ergebnisziele: Bezug auf das Projektergebnis
				- Arbeitsziele: Beyug auf die Projektdurchf√ºhrung
			- Zielinhalt: 
				- Quantitativ: Anhand von empirischen Beobachten einzelner Merkmale systematisch mit zahlenwerten erfassen
					- z.b. Umsatz, Ertrag, Stuuckzahlen, Kostenminderung, Durchlaufbeschleunigung des Entwicklungszyklus einer Software
				- Qualitativ: ...; Untersuchungsgegenstand m√∂glichst detailliert, ganyheitlich und umfassend beschreiben
					- z.b. Verbesserung des Betriebsklimas, der Produktwahrnehmlung, des Unternehmensimages
			- Kategorien
				- Strategisch: x > 5 Jahre (z.b. in den n√§chsten 5 Jahren Marktf√ºhrer sein)
				- Taktisch: 1 < x < 5 Jahre (y.b. Produktion in n√§chsten 2 Jahren verdoppeln)
				- Operativ: x < 1 Jahr (Umstieg von Windows XP auf MacOs bis Ende des Jahres)
			- Zielkonflikte/Konkurenz
				- Bsp.:  unterschiedliche Vorstellungen der Projektbeteiligten
				- Bsp.: Kosten vs. Zeit vs. Qualit√§t (Magisches Dreieck, stehen sich gegen√ºber, man kann nicht gleicheitig alle 3 optimieren)	
					- y.b. kann man Qualit't durch mehr Zeitinvestition steigern. Folge sind auch anstieg der Entwicklungskosten
			- Kausale Abh√§ngigkeiten: Ziele k√∂nnen aufeinander aufbauen

		- Zeitliche Begrenzung (befristet): defninierter Anfang, geplantes Ende
		- Finanzielle Begrenzung
		- Abrechnung (Fix-, Flexpreis) 
		- Personelle Begrenzung
		- Projektspezifische Organisation
		- Risiko (bzgl. Kosten, Termin, Qualit√§t)
		- Projektart 
	- Unterschied zu Buisiness-As-Usual bygl folgender Merkmale:
		- Ver√§nderug:
			- Schafft Ver√§nderung
			- Ist Reaktion auf Ver√§nderungen am Markt, technischen fortschritt,..
		- Befristet
		- Bereichs√ºbergrefend (mehrere Abteilungnen oder sogar Unternehmen arbeiten zsm)
		- Einzigartig
		- Unsicherheit
			- wegen Ver√§nderungs-Aspekt
			- Oft noch keine Erfahrungswerte

		
	- Kategorisierung
		- Pers√∂nliche Projekte (z.B. Studium, Hausubau,...)
		- Staatliche Projekte	
			- Oft unter Einbezug von Unternehmen (-> UnternehmensProjekte)
		- Unternehmensprojekte
			- Ausrichtungsbezogen. Orientiert an Typen von Aufgabenstellungen:
				- Revolutionsprojekte: V√∂llig  neue Probleml√∂sungen
				- Evolutionsprojekte: Auf gegebenen Probleml√∂sungen aufbauen
				- Expansionsprojekte: Neue UNternehmensbereiche erschlie√üen
			- Ausstattungsbezoge
				- Ein-Personen-Projekte: √úberschaubare Kleinprojekte. Gefahr wenn die Person ausf√§llt
				- Mehr-Personen-Projekte: Evtl. in mehreren Teams
				- Vollyeitprojekte Projektmitarbeiter arbeiten ausschlie-lich din diesem Projekt
				- Teilzeitprojekte: Projekte verwenden nur einen Teil ihrer Arbeitszeit auf das Projekt
			- Tr√§gerbezogen. Kategorisiert nach Aufgabentr√§gern:
				- Eigenprojekte: Internes Personal (Projektleiter und sonstiges Personal(
				- Fremdprojekte: Externer Auftragnehmer f√ºrt Projekt durch
				- Mischprojkete: y.b. unter Beteiligung von externen Experten
			- Funktionsbezogen. Kategorisert nach Funktionsbereich
				- Marketingprojekte, z.b. Werbeprojekte
				- IT-Projekte

- Projektmanagement
- Management: (aus eng. manage=handhaben, [mit etw.] zurechtkommen, etw. bew√§ltigen, fertigbringen; und it. maneggiare/lat. manus agere: an der Hand f√ºhren)
	- Management ist die zielorientierte Gestaltung, Steuerung und Entwicklung des Unternehmens. Ees kann umwassen
		- im engeren Sinne s√§mtliche sachbezogene Ma√ünahmen
		- im weiteren Sinne alle sachbezogenen und personalbezogenen Ma√ünahmen
- Def. Projektmanagement (PMt): .. ist die Gesamtheit von F√ºhrungs!!!aufgaben, -organisationen, -techniken und -mitteln f√ºr die Abwicklung von Projekten.
	- Teilbereiche:
		- M. von Projektinhalten und -zielen (Sachebene)
		- M. der Art und Weise des Vorgehens und des Prozesses (Bestimmung eines Vorgehensmodells miot Methoden und Prozessen)
		- M. der Steuerung von Interaktionen und Beziehungen
		- Schaffung eines gemeinsamen Verst√§ndnisses von allen Projektbereichen
		- Probleml√∂sung, Organisation und Steuerunge von Arbeitspaketen
- IT-Projektmanagement: Management von Projekten mit informatischen Objeten des Interesse=s
- Rollen im IT-Projekt: die einer Person zugeordnete oder von ihr angenommene Funktionen im Projekt. Rollenklarheit bez√ºglich Authorit√§t, Verantwirlichkeiten und begrenzungen sollten ebenfalls dokumentiert werden
	- Projektmanager (PM): Die von der durchf√ºhrenden Organisation eingesetzte Person das Team zu leiten und f√ºr die Erreichung der Projektziele verantwortlich zu sein. 
		- Es Ex. orgehensmodelle (z.b. Scrum), wo das nicht vorgesehen ist.
	- Technischer PRojektmanager
	- Usability Engineer
	- Softwarearchitekt
	- Entwickluer
	- QA ENgineer
	- ScrumMaster
	- ... (nicht alle erforderlich)

-------------
VL2

- Einteilung von Projektmanagement in Bereiche
	- (Internationale) Projektmanagementstandards
		- Normungsorganisationen
			- Deutsches Institut f√ºr Normung (DIN): DIN 69901
			- International Organization for Standardization (ISO): ISO 21500
		- Projektmanagementorganisationen
			- Project Management Institue (PMI): A guide to theproject management body of knowledge (PMBOK) (mit 3Mio das meist verkaufte PMtBuch, nicht auf IT beschr√§nkt)
				- Prozessorientiert. F√ºr jeden Prozess werden Input, Output, Werkzeuge und Verfahren (allgemein) beschrieben.
				- 47 Prozesse verteilt auf 5 Prozessgruppen und 10 Wissensgebiete. (z.b. Control Quality)
				- Enth'llt ein Diagramm, wann welche Phase des Prozesses wie stark pr√§sent ist. --> fast alle Phasen jederzeit zumindest etwas pr√§sent
		- Beh√∂rden
			- Cabinet Office (Egnlische Regierung: Projects in Controlled Environments (PRINCE2)
			- legen z.b. fest wie Projekte, die im zsmhang mit der Regierung stehen angegangen werden sollen

	- Klassische Vorgehensmodelle (h√§ufig auch> Allgemeine Vorgehensmodelle)
		- Organisiert einen Prozess in verschiedene, strukturierte Abschnitte
		- sollte festlegen:
			- Reihenfolge des Arbeitsablaufes
			- jew. durchyuf√ºhrendeAktivit√§ten 
			- Definition der Teilprodukte
			- Fertigstellungskriterien
			- Notwendige Mitarbeiterqualifikationen
			- Verantwortlichkeiten und Kompetenzen
			- Anzuwendende Standards, Richtlinien, Methoden und Werkzeuge	
		- Wasserfallmodell
			- Jede Aktivit√§t in richtier Reihenolge und vollst√§ndig durchyuf√ºhren
			- Aus Aktivit√§t resultiert ein Dokument
			- √úbergang zu n√§chsten Schritt, wenn voheriger fertig
			- R√ºckkopplungen (R√ºckspr√ºnge) auf angrenzende Stufen beschr√§nkt
			- Benutzerbeteiligung nur in Definitionsphase (Anforderungserhebung)
			- Systemanforterung --> SoftwareAnforderung-->Analyse00>Entwurf-->Kodierung00>Testen00>Betrieb
		- V-Modell
			- Integriert Qualit'tssicherung in Wasserfall: w√§hrend jeder Phase Testen
			- ANforderungsdefinition -(Anwendungsszenarien)-> Abnahmetest;(Bis hier Validierung, ab hier Verifikation) Grobentwurf -(Testf√§lle)-> Systemtest; Feinentwurf -(Testf√§lle)-> Integrationstest; Modulimplementation -(Testf√§lle)->Modultest
			- üîé Unterschiedliche Versionen: V-Model XT (XT = Extreme Tailoring, engl. "to tailor"=schneidern): ist an die jew. Bedr√ºrfnisse anpassbar
	- Agile Methoden
		- Entsprechen (mehr oder weniger) dem Agile Manifesto (2001):  Wir erschlie√üen bessere Wege, Software zu entwickeln, indem wir es selbst tun und anderen dabei helfen. Durch diese T√§tigkeit haben wir diese Werte zy sch√§tzen gelernt (Werte af der rechten seite zwar wichtig, aber die auf der linken Seiter werden h√∂her eingesch√§tzt):
			- Individuen und Interaktionen mehr als Prozesse und Werkzeuge
			- Funktionierende Software mehr als umfassende Dokumentation
			- Zusammenarbeit mit dem Kunden mehr als Vertragsverhandlung
			- Reagieren auf Ver√§nderung mehr als das Befolgen eines Plans
		- Reagieren auf Ver√§nderungen
			- Fachliche und technische Durchtringung ist oft/eigentlich nicht mit Projektstart beendet
			- Viele agile Methoden sind daher iterativ aufgebaut.
		- Iterativ
			- Scrum
			- Extreme Programming (XP) - sher programmiernah
		- Nicht iterativ
			- Kanba
		- Manche der Methoden erg√§nzen sich im praktischen Einsatz (z.b. Scrum und XP)
		- Grundprinzipien 
			- Kaizen (Kai=Ver√§nderung, Wandel; Zen - zum Besseren)
				- nicht sprunghafte Verbesserung durch Innovation, sondern schrittweise erfolgede Perfektionierung des bew√§hrtenProdukts
				- wirtschaftlicher Erfolg durch mit ausgezeichneter Qualit√§t erreichte Kundenzufriedenheit
			- Flow
				- Schaffens- bzw T√§tigkeitsrausch oder auch funktionslust
				- T√§tigkeit muss gefallen und die Anforderung so hoch, dass volle Konrentration erfordert, aber nicht √ºberfordert
			- Natural Velocity
				- es hilft idr kaum den sselben Prozess schneller/h√§rter durchzuf√ºhren, sondern nur √§ndern des Prozesses hilft
			- Face-to-Face-Communicaiton
				- direkte Kommunikation der √ºber Dokumente vorziehen
			- Inspect and Adapt
				- Retrospektive
					- in regelm√§√üigen Abst√§nden √ºberpr√ºft das Team wie es effektiver werden kann und passt sein Vorgehen entsprechend an (ziel: Kontinuierliche Verbesserung: Kaizen)
		- Agile Prinzipien
			- Zufriedenstellung des kunden durch fr√ºhe und kontinuierliche AUslieferung
			- Nutzen von Ver√§nderungen zum Wettbwerbsvorteil
			- Regelm√§√üige Lieferung von funktionierender Software
			- Nahezu t√§gliche Zusammenarbeit von Fachexperten und Entwicklern 
			- Bereitstellung des Umfelds und der Unterst√ºtzung
			- Face-To-Face-Communication
			- Wichtigstes Fortschrittsma√ü: Funktionsf√§higkeit der Software
			- Einhalten eies gleichm√§√üigen Arbeitstempos
			- St√§ndiges AUgenmerk auf technische Exzellenz und gutes Design
			- Einfachheit ist essenziell (KISS-Prinzip)
				- Keep it simple, stupid (keep it short and simple)
			- Selbstorganisation der Teams bei PLanung und Umsetzung
			- Selnbstreflexion der Teams √ºber das eigene Verhalten zur Anpassung im Hinblick auf Effizienzsteigerung
		- Scrum
			- 3 Rollen
				- Product Owner (PO)
					- Requirements (Ist f√ºr die Anforderungen Verantwortlich, sagt also was gemacht werden soll)
					- Kunde/Vertreter des Kunden,
					- wert des Produkts und der ARbeit des Entwicklerteams maximieren
					- Alleinverantwortlich f¬®r das Product Backlog
					- Verantwortlich f√ºr Projekterfolg
					- Hat vision wo das produkt hinf√ºhren soll
					-
				- Scrum Master (SM)
					- Prozess (Sorgt daf√ºr, dass Scrumm Prozess durchgef√ºhrt wird. Teammitglieder sich alsoo an die Regeln halten und sie verstehen. K√ºmmert sich um Meetings)
					- hilft aussenstehenden zu verstehen welche Interaktinoen mit dem Scrum team sinnvoll sind und welche nicht (Agil erkl√§ren)
				- Developers:
					- Code *Setzen um, Flache Hierarchie, sind nicht PO oder SM untergeordnet
					- strukturiert und bevollm√§chtigt durch Organisation ihre eigene Arbeit selbst zu organisieren und managen
			- Zeremonien
				- Daily Meeting/3 Fragen
					- Was habe ich gestern gemacht?
					- Was werde ich heute machen?
					- Sehe ich irgendwelche Hindernisse/Probleme?
					- Vorteuke: 
						- jeder wei√ü wo man gerade steht
						- vorteile werden schnell erkannt
						- nicht L√∂sung der Probleme, das passiert ausserhalb der Meetings. Es wird besprochen wer sich Problem annimmt/zur Hilfe gezogen wird
					- 15 min
				- Iterationen starten mit einem Sprit Planning (Meeting)
					- Auswahl der zu implementierenden Anforderungen aus Product Backlog
					- PO sollte dabei sein um zu sagen was wichtig
					- Devs um zu sagen was in der zeit m√∂glich
					- SM f√ºr scrum
					- Wie das Inkrement erreicht wird
						- Backlock items √ºbersetzt in Aufgaben und abgesch√§tzt
				- Iterationen enden mit einem Sprint Review (Meeting)
					- Pr√§sentation des auslieferbaren Inkrements
						- Devs pr√§sentieren Stakeholdern, insb PO die umgesetzten Features.
						- Dabei lernen sie neues √ºber das zu bauende sustem (so viel kritik wie m√∂glich bekommen)
						- setzten sich mit Produkt ausseinander
					- PO identifiziert was getan wurde
					- PO diskutiert Backlocg wie es nun ist
					- Ganze gruppe, aber priorisiert der PO besprechen was als n√§chstes zu tun ist
				- Nach dem Sprint Review: Sprint Retrospective (Meeting)
					- Reflexion √ºber die letzte Iteration
						- Setzt sich mit Prozess auseinander
					- Suche nach PRozessverbesserungen	
			- Arbeiten in kurzen Iterationen (Sprints):
				- 1-4 Wochen
				- Auslieferbares Inkrement am Ende 
			- Team organisiert sich selbst (self-organized(
			- W√§hrend eines Sprints √§ndern sich die Requirements nicht
			- Artefakte:
				- Product Backlog
					- geordnete Liste (Priorit√§ten, Wert, Risiko) von allem was im Produkt gebraucht wird 
					- die einzige Quelle von Anforderungen √ºber √Ñnderungen am Produkt
					- Product Owner verantwordlich, inkl. Inhalt, Zug√§nglichkeit und Sortierung
					- Lebende Liste
				- Sprint Backlog
					- Menge von Product Backlog Eintr√§gen f√ºr den SPrint
					- Zus√§tzlich Plan zur Auslieferung des Produkt Inkrements und zur realisierung dies Sprint Goals
					- Eine Forhersage durch das Entwicklerteam dar√ºber welche Funktionalit√§t im n√§chsten Inkrement vorhanden sein wird ( und welche Arbeit ben√∂tigt wird zum um diese FUnktionalit√§t als Done zu bezeichnen)
					- Aufwand einer Aufgabe in Story Points abgesch√§tzt und sp√§ter in Stunden umgerchnet (weil vesch. Personen an versch. Tagen versch. schnell sind)
						- Story Points: Abstraktes SCh√§tzma√ü. Nicht Aufwand sondern Komplexit√§t des umzusetzenden Features
							- Komplexit√§t der Story
								- davon abh wie oft welche SChichten des Architekturmodells durchsto√üen werden...
							- Komplexit√§t der Interaktionenen die zur Umsetzung n√∂tig sind	
							- jedes team f√ºr sich, innerhab aber gleiches vVerst√§ndnis des Ma√ües
							- Analogieverfahren :Storypoints werden durch das vergleichen verschiedener Storys vergeben
							- In der Praxis:
								- Ausgangspunkt ist eine Referezstory mit mittlererer Gr√∂√üe
								- Andere Stories damit vergliechen 
									- dazu verwendeung der Fibonacci reihe (F(i)=F(i-1)+F(i-2))
										- da wenn komplexr die Genauigkeit der Sch√§tzung abnimmt
							- Velocity-Faktor
								- gibt an wieviele Story-Points in einem definierten Zeitbereich umgesetzt werden k√∂nnen
								- Teamabh√§ngig, Zeitpunktabh√§nig
								- M√∂glichkeiten zur bestimmung:
									- Verwendung historischer daten wie viele Storypoints das Team pro zeiteinheit schafft
									- Vorprojekt: kleiner Ausschnitt des Gesamtprojektes in kleinem Vorprojekt umsetzten und damraus Velocity-Kennziffer ermitteln
									- Sch√§tzen: sonst
					- Idr in Scrumboard visualisiert und t√§glich aktualisiert
						- Spalten: Story; ToDol In Process; To Verify; Done
						- darin Karten, die jew user story enthalten und verschoben werden
				- Impediment Backlog
					- Liste von Dingen, die Team hindern Aufgaben zu erledigen oder das Sprint ziel zu erreichen
					- Team muss in t√§glichen Scrum meetings √ºber solche Hindernisse berichten
					- werden evt, in Retrospektive aufgeddeckt
					- Scrum Master ist zust√§ndig f√ºr z√ºgige Aufhebung der Hindernisse zu sorgen
	
			- Essenz von Scrum
				- Klare Ziele
				- Selbstorganisation
				- Regelm√§ssige auslieferung der wertvollsetn Features
				- Team erh√§lt Feadback von Au√üenstehenden
				- Team reflektiert die arbeitsweise um sie zu verbessern
				- Ganze ORganiation hat Einblick in Fortschritt des Teams
				- Team und Management kommunizieren ehrlich √ºber FOrtschritt und risiken
			- wo hilfreich
			- was storz Points sind, wozu, wie ermitteln
			- wie Risikomanagement urch crum unterst√ºtzt wird
		- XP
			- Selten erw√§hnt, da mittlerweile selbstverst√§ndlich
			- 5 Werte
				- Kummunikation
					- Viele Probleme h√§ngen mit fehlgeschlagener oder nicht stattfindender Kommunikation statt
					- z.b.
						- stille Annahmen √ºber ANforderungen
						- NIcht kooridinierte technische Entscheidungen
						- Fehlende Informationen zu Designideen
						- Fehlende Hinweise auf technischen √Ñnderungen
				- Einfachheit
					- Einfachstste L√∂sung w√§hlen, die Anfoderungen erf√ºllt (bzgl. Prozess und Produkt)
				- Feedback
					- hilfreich schnell R√ºckmeldungen hinsichtlich Konsequenzen von Aktivit√§ten un dPl√§nen zu bekommen
					- neuer code korrekt? Passt er zum Rest des Szstems? Wie zweckdienlich
				- Mut
					- f√ºr die ersten 3 Werde ist Mut erforderlich
					- z.b. kommunizieren, dass ein vielgenutztes Interface ge√§ndert werden sollte
					- sich negativem Feedback stellen
				- Respekt
					- Basis, damit Team den Werten Kommunikation, Feedback und Mut folgen kann
					- Jeder gegen√ºber jedem
			- XP Praktiken: 
				- Prozesse
					- Pai Programming
					- 40 Woche
					- Sit Together
					- Whole Team
					- Informative Workspace
				- Architektur
					- Refactoring
					- ...
				- Testing
					- Coding standards
					- Continuous Integration
					- ...
				- #TODO: stark √ºberflogen, aber sehr sinnvoll mir nochmal anzugucken
	- Ans√§tze dieser 3 Bereiche √ºberschneiden sich zum Teil (z.b. V-Model XT mit agilen Methoden verkn√ºpfbar)22
- PITPM (Pragmatisches IT-Projektmanagement) ist eine anpassung und konkretisierungung des PMBOK Guide f√ºr Softwareentwicklungsprojekte
- Einteilung von Projekten (Nach PITPM, √§hnlich PMBOK Guide. Andere Modelle definieren andere aber √§hnliche Phasen)
	- 5 Phasen (zeitliche Einteilung)
		- Vorbereitung
			- Initialisiert durch:
				- Pre-Sales / Ausschreibung
				- Projektauftrag
			- Vorl√§ufige Beschreibung des Projektumfangs
			- Potenzielle Vorarbeiten, die nicht zum eigenlichen Projekt geh√∂ren (Vorprojekte)
				- Machbarkeitsstudie
				- Angebot
				- Grobe Aufwandssch√§tzung
			- Kann als eigenes Projekt verstabnden werden (wird es abner h√§ufig nicht)
			- Ziel: Projektauftrag ist erteilt.
			- Prozesse (und deren Aktivit√§ten):
				- V.1 Projektumfang bestimmen (durch Rolle: Anforderungsmanager)
					- V.1.1 Leistungsumfang bestimmen
						- Ziele des Kunden verstehen
						- Eingangsartefakte:
							-  Kunden-Dokumentation (soweit vorhanden)
							- Aufforderung zur Angebotsabgabe
							- Pr√§sentationen
							- Spezifikationen
							- Prozessbeschreibungen
							- Protokolle
						- Methodiken, Techniken, Werkzeuge
							- Oft enge Grenzen bei Erhebung
							- Rahmenbedingungen meist durch Auftrtaggeber bestimmt
							- Oft nur schriftliche Fragen erlaubt, auf die nicht immer klare Antwort erfolgt
	q						- Tipp: M;glichst den Prozess selber gestallten
								- Im Rahmen der M√∂glichkeiten: Workjshops, Befragungen,...
								- Kooperative Techniken einsetzenL Produktkonzept muss von beiden Seiten getrragen werden
						- Ausgangsartefakte: Projektumfangsbeschreibung (1. Version)
							- Projekt- und Produktziele
							- Projektgrenzen, -anforderungen und -liefergegenst√§nde
								- idr keine umfassende Anforderungsliste sondernein sog. Produktkonzept
									- Nuzyen und Mehrwert f√ºr den KLunden auf h√∂herem Abstraktionsniveau
							- Produktabnahmekriterien (unter welchen Bed. kann Abnahme erfolgen/verweigert weerden)
							- idr. gilt: vorl√§ufig (evolution√§re Entwicklung), hohes Abstraktionsniveau
							- Dokument, das Zielsetzungen, √úbersicht der Projektergebnisse und wesentliche Annahmen zum Projekt zsm fasst. Darin beschriebener Projektumfang in offizieller Abnahme festgelegt, womit sie als Referenz f√ºr die Beteiligten dient.
							- Oft auch Lastenheft oder Pflichtenheft genannt, erg√§nzt uim Glossar. (Balzert)
								- 1. Zielbestimmung
								- 2. Produkteinsatz: Anwendungsbereich/Zielgruppen
								- 3. Produkt√ºbersicht: Produktumgebung
								- 4. Produktfunktionen
								- 5. Produktdaten: (zu speichernde Hauptdaten)	
								- 6. Produktleistungen: z./b. bzgl. Genauigkeit von Daten
								- 7. Qualit√§tsanforderungen: z.b. Zuverl√§ssigkeit, Benutzbarkeit,...
								- 8. Erg√§nzungen
					- V.1.2 Grobanforderungen identifizieren (durch Rolle: Anforderungsmanager)
						- Eingangsartefakte: 
							- Alles was hilft den Leistungsumfang zu bestimmen (Eingansartefakte von V.1.1,..)
							- Ausschreibungsunterlagen
							- Workshops mit dem Auftraggeber
							- ...
						- Methoden, Techniken, Werkzeuge:
							- Soweit m√∂glich: Techniken des Requirement Engineerings (Anforderungsanalyse)
								- Befragungen (m√ºndlich, schriftlich)
								- Analysen von bestehenden Systemen, Dokumenten, Nutzern bei Umgang mit Systemen,...
						- Ausgangsartefakte: Anforderungsliste (1. Version)
							- Messbare Anforderungen
								- Anforderung:
									- (1) Bediungung oder F√§higkeit, die von einem Benutzer ben√∂tigt wiurd um ein Problem zu l√∂sen oder ein Ziel zu erreichen
									- (2) Bedingung oder F√§hiogkeit, die ein System oder eine Systemkomponente beinhalten muss, um einen Vertrag, Standard, Spezifikation oder andere formell auferlegte Dokumente zu erf√ºllen	
									- Funktionale Anforderungen:
										- Was das Produkt tun soll.
									- Nichtfunktionale Anforderungen: Welche EIgenschaften das Produkt dar√ºber hinaus haben soll. / Anforderungen an die Qualit√§t in welcher die geforderte FUnktionalit√§t zu erbringen ist. 
										- z.b. Aussehen und Handhabung; Zuverl√§ssigkeit, Fehlertoleranz; Benutzbarkeit, Verst√§ndlichkeit, Bedienbarkeit; Performanz, Durchsatz, Antwortzeiten, Reaktionszeiten; Hardwareanforderungen, Ressourcenbedarf; Betrieb und Umgeb ungsbedingungen; Portierbarkeit, Installierbarkeit; Vertf√ºgbarkeit, Skalierbarkeit, Ertweiterbarkeit; Vertraulichkeit, Datenschutz, Datensicherheit; Korrektheit: fehlerfreie Ergebnisse, Fehglertoleranz; Unterst¬®tzung von Standards, Normen und VOrschriften; Einzusetzende Sporachen, Methoden, Techniken und Werkzeuge
							- Repr√§sentieren Anforderungen des Kunden(/der sp√§teren Anwender) an das zu entwickelnde Softwareprodukt
							- Oft in Form von User Stories
								- In nat√ºrlicher Sprache aus Nutzersicht verfasste Software-Anforderung	
								- kurz gehalten (idr <= 2 S√§tze)
								- Haben idr Name
								- funktionale Anforderungen oft auf Story Cards (Karteikarten/Post-Its) geschrieben
									- Vorderseite:
										- Prioisierung
										- Name der Story
										- Story Points
										- Beschreibung der Story (Wer, was, warum)
											- Format: "Als <Rolle (wer?)> will ich <Ziel/Wunsch (was?)>, um <Nutzen (warum?)>"
											- bsp: Als Mitarbeiter m√∂chte ich einen Konferenzraum iim Intranet buchen, um dort eine Besprechung abzuhalten
										- Risiko
										- Story Points (Post-Sch√§tzung)
									- R√ºckseite (Wie Kann die Story getestet werden)
										- Ein oder mehrere Akzeptanzkriterien
											- Angenommen <Vorbedingung>, wenn <Aktion>, dann <Ergebnis>
											- Mittels Behavior Driven Development automatisiert testbar
									- themnatische gruppierung, priorisierung und sch√§tzung idr erst in V.1.4
										
								- K√∂nnen unterschiedliche Granularit√§ten haben
									- Sehr gro√ü --> Epic
								- Haben oft Akzeptanzkriterien (R√ºckseite der Karte)
								- Zentrales Ergebnis des Fachlichen Gespr¬®√¢chs zw PM und Entwicklungsteam
								- Muss √ºberpr√ºfbar und testbar sein
							- idr gilt: vorl√§ufig, wird im weiteren Projektveerlauf (z.b. in Planungsphase) angepasst und verfeinert
					- V.1.3 Projektorganisation definieren (durch Rolle: Projektmanager)
						- Eingangsartefalkte: Projektumfangsbeschreibung (1. Version)
						- Ausgangsartefakte: Projekt-Organisations-ChartFestlegen
							- Stellt in art Baumdiagramm dar, welche Rollen im Projekt besetzt werden m√ºssen.
							- z.b. Projektmanager-(Technischer Projektmanager-(Architekt, Entwickler), Testmanager-(Tester), Risikomanager,...)
					- V.1.4. Aufwand absch√§tzen (durch Rolle: Softwarearchitekt)
						- Eingangsartefakte: Risikoregister
						- Sch√§tztechnik: 
							- Drei-Punkte-Technik (PERT-Dreipunktsch√§tzung)
								- Sch√§tzung des Aufwands f√ºr jedes Arbeistpaket (in Mann-Tagen MT):
								- 1. Pessimistische Sch√§tzung
								- 2. Wahrscheinliche Sch√§tzung
								- 3. Optimistische Sch√§tzung
								- (pessimistische Sch√§tzung + 4* wahrscheinliche Sch√§tzung + optimistische Sch√§tzung ) / 6
							- Sch√§tzklausur
								- Sch√§tzung des Aufwands f√ºr jedes Arbeispaet
								- 1. Jedes Teammitglied gibt eine verdeckte Sch√§tzung pro Arbeitspaket ab
								- 2. Grobe Ausrei√üer werden eliminiert oder diskutiert, falls Bedenkentr¬®rager einen Grund hat, den die anderen nicht gesehen haben
								- 3. Bildung des Durchschnitts
						- Ausgangsartefakte: Aufwandsabsch√§tzung
							- Absch√§tzung von Gesamtaufwand/kosten
							- Erste Zahl ins Ged√§chtnis des Auftragsgebers gebrannt, daran gekn¬®pfte Bedinungen nicht. Daher:
								- Rahmenbedingungen detailliert vertraglich in Dokument festhalten
							- Evtl iterativen./agilen Ansazy w√§hlen/Vorschlagen. Bei interenen Projekten leicher zu erreichen
						- Probleme:
							- Vieles h√§ufig noch nicht abschlie√üend gekl√§rt, insb. Anforderungen
							- Viele Risiken noch nicht vollst√§ndig eruiert
							- Trotydem Festpreisabsch√§tzung erwartet
								- zu hoch --> man bekommt Auftrag evtl nicht
								- zu niedrig --> man bleibt evtl. auf Kosten sitzen
							
				- V.2 Risiken analysieren (durch Rolle: Risikomanager)
					- Risiko:
						-  Qualitativ: 
							- Beschreibung eines Ereignisses mit M√∂glichkeit negativer Auswirkungen
							- M√∂gliche Bedrohungen f√ºr Erfolg des Projektes
						- Quantitativ: 
							- Produkt aus Eintrittswahrscheinlichkeit eines unerw√ºnchten Ereignisses und Schadensschwere
						- Bsp: Schnittstelle zu anzubindenden Szstem edes Auftraggebers ist komplexerr/unzuverl√§ssiger als angenommen
					- Bereiche der Risikoquellen: technisch, sozial, rechtlich
					- Risikofaktoren (Gefahren, die ein Projekt bedrohen)
						- √Ñnderungsw[nsche
						- Externe Ressourcen
						- Neue Techniken
						- Perfektionismus
						- Personal
						- Planungsfehler
						- Projekltdurchf√ºhrungsfehler
						- Technische Probleme
						- Termineinhaltung
						- ...
					- V.2.1 RIsiken identifizieren
						- Trennung der Rollen Projektmanager und Risikomanager vermeidet Zielkonflikte
						- Eingangsartefakte:
							- Anforderungsliste
							- Projektumfangsbeschreibung
						- Methoden, Techniken, Werkzeuge
							- Jedes Instrument zur Identifizierung ist angebracht 
							- komplexere Risiken werden h√§ufig erst duch kollaborative Kreativetechniken ermittelt
								- Brainstorming
								- Delphi
								- Root-Cause-Analysen
						- Ausgangsartefakt: Risikoregister
							- Beschreibung der projektbezogenen Risiken
						
					- V.2.2 Risiken bewerten und priorisieren
						- Eingangsartefakt: Risikoregister
						- Methoden, Technniken, Werkzeuge
							- Betrachtung der 
								- Auswirkungen bei Eintreten (Kostensch√§tzung)
								- Wahrscheinlichkeit des Eintretens
								- Wirksamkeit von ergreifbaren Gegenma√ünahmen
							- Expected Monetary Value Analysis (EMV) zur Einsch√§tzung finanzieller Folgen eines Risikos
								- welcher der Wege hat geringers Risiko 
								- Entscheidungsbaum: Rechteck[Entscheidungspunkt: Szenario 1 oder Szenario 2] - {Kreis(Szenario 1)-{20%-500.00, 15%- -35000, 65%-400.000}, Kreis(Szenario 2)-{...}}
								- Tabelle f√ºr jedes szenario
									- Reihen: Best Case, Worst case, Most likely case
									- Spalten: Wahrscheinlichkeit, monet√§rer Wert, Beschreibung, EMV (monet√§rer Erwartungswert)
									- z.b. Szenario 1:
									       Best Case: 20%; 500.000; Gewinn; 100.000
									       Worst Case: 15%; -35.000; Verlust; -5.250
									       Most likely case: 65%; 400.000, Gewinn; 260.000
									  (darunter Summe der EMV:) EMV (total): 354750
							- Entscheidungsb√§ume zuir Einsch√§tung von alternativen Gegenma√ünahmen bei Risikoeintritt
						- Ausgangsartefakt: Risikoregister (Aktualisierung)
							- priorisiert
							- Vorgsaben zur Risikobew√§ltigung
				- V.3 Projekt beauftragen (durch Rolle: Projektmanager)
					- V.3.1 Projektauftrag entwickeln und bereitstellen
						- Eingangsartefakte: 
							- Extern: Vertrag
							- Projektumfangsbeschreibung
						- Ausgangsartefakt: Projektauftrag
							- soll von Spoonsor autoirisiert werden
								- Sponsoren: idr Herausgeber (verantwortlicher) f√ºr Projektauftrag
							- Vorraussetzung, das PM auf Ressourcen zugreifen kann, und die P{rojektarbeit beginnen kann
							- idr Verfasst von Projektmanager
							- Themen des Projektauftrags:
								- Motivation (wirtschaftrlich, rechtlich,...)
								- Bestehende Anforderungen, W√ºnsche und Vorstellungen an Projektverlauf und Produkt
								- Projektdesign: Benennung des Projektmanagers, sowie der betroffenen Organisationsbereiche
								- Grobe Meilensteinplanung (Wunschtermine des Kunden)
								- Benennung und Beschreibung der Stakeholder
									- die das Projekt beeinflussen k¬®√¥nnen oder derren interessen ber¬®√ºcksichtigt weerden m√ºssen
								- Rahmenbedingungen (z.b. verplflichtende Benuztung von Systemen des Auftraggebers)
								- Gesamtbudget
								- optional:
									- Refrenz auf Vertrag zw. Auftragnehmer und Auftrtaggeber (Bezug auf Rahmenvertrag)
									- Referenz auf Artefakte der Vorbereitungsphase		
								- mehr siehe VL3, s.49 (Inhaltsverzeichnis des Projektauftrags nach PITPM
			- KontrollPunkt K1 (vor √úbergang zu Planung)
				- Projektinhalte sind gekl√§rt/festgelegt
				- Projektauftrag wurde erteilt
					- Niemals in die n√§chste Phase (Planungsphase) ohne Auftrag starten. (evt. verschwendung von Ressourcen, keine autorisierung)
		- Planung
			- Ausgangspunkt im Idealfall: unterschriebener Projektauftrag
			- PM kl√§rt:
				- Wie Anforderungen erhoben, bestimmt und analzsiert werden
				- Wo und wie Dokumente angelegt werden
				- Wer zum w√∂chentlichen Jour fixe eingeladen wir
				- Wie Risiken beobachtet werden, wer daf√ºr verantwortlich ist
				- Wie Beschaffungsprozesse organisiert und gestallt sein m√ºssen
			- Konfiguration des Projektes (durch PM)
				- Managementplan f√ºr alle Wissensgebiete (z.b. Qualit√§tsmanagement) entwickeln
					- Bindeglied zwischen Wissensgebieten und Phasen
			- Ergebnisse (zentrales Artefakt):
				- Projekthandbuch oder Projektmanagementplan (PM-Plan) 
					- Wie soll Projekt konkret gemanaged werden (Mutter aller Pl√§ne)
					- Vollst√§ndige Definition der ProjektprozesseL Wie das Projekt funktioniert und abl√§uft
					- Fr√ºhzeitig aufstellen, Lebendes Dokument (wird w√§hrend Projekt angepasst)
					- F√ºhrt s√§mtliche Managementpl√§ne der einzelnen Wissensbereiche zusammen und konsolidiert sie
				- Anforderungsliste
					- Verfeinerung der ersten Anforderungsliste aus der Vorbereitungsphase
				- Release- und Iterationsplan
					- In welchem gtroben Zeitrahmen werden die identifizierten Anforderungenumgesetzt 
					- Iterationsplanung: Festlegung von weiteren, n√∂tigen Planungsmeilensteinen zur iterativen Erstellung von Ausbaustufen des PM-Plans (eine vs. viele Iterationen)
			- Ziel: Team und Kunden wissen, wie das Projekt ablaufen wird
			- Prozesse (und deren Aktivit√§ten):
				- P.1 Projekt Konfigurieren
					- Alle notwendigen Aspekte planen und konfiguriueren. Man erh√§lt also diue Handlungsanweisung f√ºr die F√ºhrung des Projektes
					- z.b. Umgang mit Risiken; Anfoirrderungsanalyse
					- P.1.1 Projektteam aufstellen
						- Eingangsartefakte: 
							- Projektauftrag
							- Projektorganisation
						- Ausgangsartefakte: 
							- Liste mit Projektmitarbeitern und Kontaktdaten (Anfang Projektmanagementplan)
								- Zusammenstellung der notwendigen Mitarbeiter (ggf. aus Fachabteilungen oder von externen Dienstleistern
								- Kriterien bei der Auswahl der Mitarbeiter
									- Verf√ºgbarkeit in der Projektlaufzeit
									- Kosten mit Blick auf das Projektbudget
									- Erfahrung in Hinblick auf den Projektauftrag
									- Eignung mit Blick auf die ben√∂tigten Kompetenzen
									- Kenntnisse von √§hnlichen Projekten (Branche, Befindlicjhkeiten,...)
									- Fertigkeiten in Hinsicht auf Tools f√ºr PM oder SW-Entwicklung
									- Einstellung und Verhalten (Blick auf die Zusammenarbeit im Team)
									- Standort (Zeitzonen/Kommunikationsm√∂glichkeiten)
					- P.1.2 Kick-Off-Workshop durchf√ºhren
						- Ziel: Kenenlernen der Beteiligten; Teambildung
							- Botschaft: Alle Aufgaben sind nur gemeinsam zu bew√§litigen. Daher nicht reine Frontalpr√§sentation
						- Eingangsartefakte: 
							- Projektauftrag
							- Projektorganisation
						- Beteiligte (sofern schon bekannt/gesetzt):
							- Sponsoren/Auftraggeber
							- Stakeholder (bzw. deren Sprecher)
							- Entscheider aus Linien-, Projekt-, bzw. Serviceorganisation
							- Mitarbeiter (Team)
						- Inhalte
							- Vorstellung der Sponsoren/Auftraggeber
							- Vorstellung der Stakeholder, Teams und Teammitglieder
							- kurze Darstellung der Erwartungshaltung der Anwesenden an das Projekt
							- Projektziel und Zeitraum
							- Grober Fahrplan (Meilensteine, falls schon vorhanden)
						- Problem bei gro√üen Projektteams: zu viele Teiolnehmer
							- L√∂sung: Aufteilung in 2 Phasen
							- 1. Phase: Alle: Vorstellung der Teilnehmer und Erwartungen sowie Pr√§sentation der Bedeutung des Projektes fg√ºr das Unternehmen
							- 2. Phase: Nur ProjektteamL Einschw√∂ren auf PRojekt und Zusammmenarbeit
						- Ausgangsartefakte: 
							- Dokumentation des Workshops
								- Workshop ist wichtig, nicht seine DOkumentation
					- P.1.3 Projektmanagementplan entwickeln
						- Eingangsartefakte: 
							- Projektauftrag
							- Projektorganisation
						- Ziel: Anpassung der Struktur an die Bed¬®rfnisse desa Projekts. --> Das Vorgehensmodell PITPM selbst wird also auf die Bed√ºrfnisse des Projektes zugeschnitten
						- Ausgangsartefakte: 
							- Projektmanagementplan (PMP)
								- Definiert wie das  Projekt funktioniert und abl√§uft
								- Festlegungen im PMP
									- Auslassungen oder √Ñnderungen bei PITPM-Prozessen/-Aktivit√§ten
									- Werkzeuge und Techniken die zum Einsatz kommen (z.b. Kollaborationsplattformen, Projektplanung, Excel zum Reporting,...)
									- Wie mit √Ñnderungen umgegangen wird
									- Wie die Produktionsgeschwindigkeit gemessen werden soll
									- Ob und wie die Teamstimmung erfasst werden soll
									- Wie miteinander und zum Management kommuniziert wird (Inhalt, Inhalt H√§ufigkeit,...)
									- Vorgaben zum Review und zur Freigabe von Artefakten
									- Konfigurationsmanagement
										- Festlegung der Sysyteme und Prozesse f√ºr die Aufgabenverfolgung, Defect und Change Request Management,...
								- Pareto-Effekt/80-zu-20-Regel: 80% der Ergebnisse k√∂nnen in 20% der Zeit erreicht werden. die verbleibenden 20% ben√∂tigen 80% der Gesamtzeit und verursachen die meiste Arbeit
									- Daher: Nicht (immer( sinnvoll jedes Detail vollst√§ndig zu planen. Ist der Rahmen verl√§sslich beschrieben, k√∂nnen einzelne Managementpl√§ne auch sp√§ter integriert werden.
						- PM ist zwar verantwortlich f√ºr dieErstellung des PMP-Dokuments, nicht aber unbedingt f√ºr die Erstellung der Pl√§ne jeder einzelnen Disziplin. z.b. einbindung von Teilprojektleitern empfehlenswert
					 P.1.4. Risikoplanung konfigurieren
						- Eingangsartefakte: 
							- Projektumfangsbeschreibung
						- Methoden
							- Risikoplanungsmeeting mit relevanten Projektmitgliedern
							- Checkliste Risikomanagement 
								- Ess gibt Checklisten mit Risikotypen
						- Ausgangsartefakte: 
							- Erweiterung des PMP um Kapitel zur Konrolle der Projektrisiken
								- Prozesse zur Identifikation und zum Umgang mit Risiken
								- Hier noch keine betrachtrung der einzelnen Risiken, sondern Vorgaben f√ºr das Risikomanagement
									- Wann werden Risiken zum ersten mal und in Folge erfasst
									- Wie werden Risiken sowie ihre Auswirkungen (auf den Projektplan) und Gegenma√ünahmen gef√ºhrt?
								-  Bsp: Tabelle f√ºr Erfassung im PMP: Spalten: Risiko QUellen; Typen von Risiken (Beispiele); Identifikation durch; Operative Behandlung
									Personal; Ungen√ºgende Ressourcenverf√ºgbarkeit; Projektmanager; Risiko Manager/Projektmanager
									Personal; Fehlende fachliche Qualifikation; Projektmanager; Risiko Manager/Projektmanager
									Technologie; Technische MAchbarkeit; Architekt; Risiko Manager/Projektmanager
					- P.1.5 Beschaffung und Zulieferungen planen
						- Eingangsartefakte: 
							- Projektumfangsbeschreibung
						- Ausgangsartefakte: 
							- ERg√§nzung des PMP um s√§mtliche Vorgaben f√ºr Beschaffung im Projekt
								- Dienstleitungen, Waren und Zulieferungen
								- Wichtig: Inkl. Zulieferungen des Auftraggebers, sofern im PRojektauftrag vereinbart
						- Hier steht in weiten Teilen noch nicht fest, welche Teile zugeliefert werden m√ºssen
							- nur Festlegung von Kriterien zur Entscheidungsfindung und zu Rahmenbedingungen
							- Unternehmensinterne und projektspezifische Richtlinien ber√ºcksichtigen
								- Wer kann bis zu welchem Preis beauftragen 
								- Wer muss in die Beauftragung involviert werden
								- Welche Standards, Zertifikate,... m√ºssen bere√ºcksichtigt werden
					- P.1.6 Projekt-Controlling aufsetzen
						- Pr√ºfen ob die Zahlen stimmen
						- Kostenplan, der die Ausgabekurve und somitg den Verlauf der Projektkosten skizziert. 
						- Vorgehen
							- √úberpr√ºfen ob SCha√§tzung (in Toleranzgrenzen) noch korrekt. Wenn nichtr Genehmigung einholen
							- Auf Basis der SCh√§tzung Kostenplan erstellen: Projektkosdten √ºber die Zeit. 
							- Sp√§ter: Vergleich des Kostenplans mit den tats√§chlichen KOsten
						- Eingangsartefakte: 
							- Projektumfangsbeschreibung
							- Aufwandsabsch√§tzung
							- Projektkosten aus der Vorbereitungsphase
						- Ausgangsartefakte: 
							- Earned Value Report
					- P.1.7 Projektkommunikation planen
						- Eingangsartefakte: 
							- Projektumfangsbeschreibung
						- Ausgangsartefakte: 
							- Erg√§nzung des PMP um derartige Planung der Kummunikation mit Stakeholdern und Team, dass
								- (jederzeit) alle INformationen, die f√ºr die MA erforderlich sind bereitstehen 
								- Informationen verbreitet werden die die Arbeit des PRojektes darstekllen (werben f√ºr das Projekt)
								- Unterscheidung der Informationen zw
									- sachorientiert (um das Projekt durchzuf√ºhren (f√ºr Team, ...)
									- beziehungsorientiert (um das POrojekt zu m√∂gen (prim√§r f√ºr Stakeholder)
						- Nicht jder Kommunikationsweg muss im Detail festgelegt werden
						- Wichtig sind:
							- Regelm√§√üig stattfindende Meetings
							- Berichtsformate und ihre ZIelgruoppen
						- Kommunikation ist ein Mittel zur Motivation, daher Informationen in geeigneten Median aufbereiten (Intranet, Besprechuingen, Einzelgespr√§che)
					- P.1.8 Softwarteentwicklung konfigurieren
						- Eingangsartefakte: 
							- Projektumfangsbeschreibung
						- Ausgangsartefakte: 
							- Erg√§nzung des PMP um Festlegung nach welchem Vorghehens- bzw Prozessmodell die eigentliche SOftwareentwicklung durchgef√ºhrt wird
								- Prozessmodell beschreibt den oprganisatorischen Rahmen 
									- alle cdurchzuf√ºhrenden Entwicklungsaktivit√§ten
									- ihre logische Reihenfolge
									- verantwortliche ROllen
									- einzusetzende Methoden und Werkzeuge
									- zu erzeugende (zwqischen-) Ergebnisse/Artefaktea
					- P.1.9 Anforderungsanalyse planen
						- Eingangsartefakte: 
							- Projektumfangsbeschreibung
						- Ziel: Festlegung, wie Anforderungslanalyse von stattn gehen soll
							- Mittel zur Erhebung der Anforderungen
								- Schriftliche Benutzerbefragung, Interviews, ANalyse von Dokumenten (Gesch√§ftsprozessbeschreibungen),...
							- Vorzubereitende Arbeitsmittel zur ERhebung
								- Interviewwleitf√§den, Vorlagen zur Interviewprotokollierung,...
							- Prototyping mit Benutzermitwirkuing?
								- ggf. Auswahl der Benutzer
							- Organisatorische Aspekte
								- Terminereinbarungen mit Nutzern,...
							- Hard- und softwaretechnische Infrastruktur
								- Office Produkte, Umfragesysteme,...
							- Abnahme- und Freigabeprozesse
							- M√∂glichst enge Integration des Auftraggebers. 
					- P.1.10 Change-Request-Prozess planen
						- Eingangsartefakte: 
						- Methoden und Werkzeuge
							- z.b. Trouble-Ticket-Systeme wie Jira
						- Ausgangsartefakte: 
							- CR-Prozess (Als Teil des Projektmanagementplans)
								- Beschreibt wie √Ñnderungen am Projektumfang/-Inhalt verwaltet/gehandhabt werden
								- Wie wird zwq ge√§nderten und neuen Anfragen diffferenziert
								- Wann werden √§nderungsvorschl¬®√¢ge akzeptiert (z.b. nur einmal im Vorfgeld jeder Iteration)
								- Wer kann √ºberAufnahme entscheiden? (z.b. Projektsteuerungsgremium)
								- Wie erfolgt Freigabe und Budgetierung von Change Requests?
					- P.1.11 Qualit√§tsplan erstellen
						- Eingangsartefakte: 
							- Projektorganisation
							- Projektumfangsbeschreibung
						- Ausgangsartefakte: 
							- Erg√§nzung des PMP um festlegung von konkreten Qualit√§tsstandards (f√ºr Projekt und f√ºr das zu entwickelnde SW-System), und wie diese zu erreichen sind
								- Zu jedem liefergegenstand wird festgelegt, wie Qualit√§t bereits bei Entstehung implementiert und kontrolliert werden kann
							- Testkonzept (Als Teil des Projektmanagementplans)
								- Wer testet zu welchem Zeitpunkt mit welchen Methode und Werkzeugen welche Systembestandteile des zu entwickelnden Softwareprodukts
								- Arten: Modul-/Komponententest, Last-/Systemtest, Abnhametest
								- Pr√ºfziele
									-  Vollst√§ndigkeit der spezifizierten Anforderungen (Systemtest)
									- Fehlertoleranz, Performanz (Lasttest)
									- Benutzbarkeit (Usability-Test) 
				- Kontrollpunkt K2: Projekt Konfiguriert
					- Verabschiedung der Prozessbeschreibung
						- Bedingung: Projektmanagementplan mit seinen unterpl√§nen wurtde edrstellt
				- P.2 Stakeholder analysieren (siehe Bsp. f√ºr Prozesse)
					- Wer hat welche Intereessen am Verlauf oder Ergebnios des Projektes, welchen Einfluss k√∂nnen dise auf das Projekt haben
					- Stakeholder/Interessentr√§ger: Person oder Gruppe, die ein bereichtigtes Interesse am Verlauf oder Ergebnis eines Prozesses oder Projektes hat
						- Neben Personen und Gruppen k√∂nnen auf IOnstitutionen, Dokumente odewr Regelwerke als Stakeholder aufgefasst werden
						- Spielen in jeder Phase eine wichtige Rolle
							- Bed√ºrfnisse befriedigen 
								- k√∂nnen sehr unterschiedlich, gegenl√§ufig und widerspr√ºchlich sein
						- Aktive Stakeholder
							- Arbeiten am Projekt mit oder sind direkt vom Projekt betroffen
							- z.b. Projektleiter, Projektmitarbeiter, Kunden,....
						- Passive Stakeholder
							- Sind von Projektdurchf√ºhrungg oder den Projektauswirkungen nur indirekt betroffen
							- z.b. Interessenvertretungen, Anwohner bei Bauprojekt, Familienmitglieder der Projektmiutarbeiter,...
					- P.2.1 Stakeholder identifizieren
						- Eingangsartefakte:
							- Projektauftrag
							- Projektorganisation
							- Weiterf√ºhrende Infos zum Unternehmen
							- Unternehmensorganisation
						- Bew√§hrte Vorgehensweisen
							- Einzelgespr√§che mit betroffenen Mitarbeitern
							- Einzelgespr√§che mit Mitarbeitern des Projektteams
							- Worklshops mit Projektteam
							- Analuse des OPrganigramms
							- Analyse der Gremienbesetzung im Unternehmen (z.b. Mitarbeitervertretung)
							- Durchsicht des Intranets
							- Lesen von Newslettern uind sonstigen Medien zur Unternehmenskommunikation
						- Ausgangsartefakte:
							- Stakeholder-Liste
								- z.b. nach Bezug zum Projekt und zugeh√∂rigkeit zum Unternehmen in den 4 Quadranten eines Koordinatensystems, welches auf x-Achse intern, extern hat, auf y achse indirekt direkt
								- intern: geh√∂ren zu Firma in der edas Projekt durchgef√ºhrt wirtd (beauftrat Firma A Firma B mit dem Projekt --> in firma A: intern, iun firmma B: extern). 
								- Bsp: intern, direkt: 
									- Mitarbeiter/Abteilungsleiter von Fachabteilungen, die neue Funktionalit√§tn nutzen 
									- Projektsponsor, Auftraggeber, Projektleiter des Kunden, Projektleiter/Projektmitarbeiter des Kunden
								- Bsp: intern, indirekt:
									- Betriebsrat/Mitarbeiter-Vertretung der durchgf√ºhrenden Firma (z.b. intereessiert daran ob √ºberstunden anfallen)
									- Interessenvertretung (z.b. leitende Angestellte, Au√üendiesntvertretung
									- Abbteilung Rechnungswesen *(Verbuchung der Projektkoisten)
									- Abteilung CControlling (erstellung der Budgets)	
									- Abteilungen, die indirekt von Projekt betroffen sind
								- BspL extern, direkt:
									- Exterener Projektleiter
									- Externe Projekt mitarbeiter
								- Bsp: extern, indirekt
									- Externe Lieferanten und Dienstleiter
										- weil nicht an Projektergebnis interessier
									- Mitbewerber
									- Politische Stakeholder (wahrscheilich hier)
								- Zu erfassenden Daten der Staeholder
									- Name, Vornahme
									- Kontaktdaten
									- Direkt/Indirekt
									- Intern/Extern
									- Rolle im Projekt
									- Rolle im operativen Tagesgesch√§ft (Unternehmen, Abteilung,...)
					- P.2.2 Anfoirderungsgeber identifizieren
						- Methoden:
							- Gespr√§che
							- Workshops
						- Ausgangsartefakt: Stakeholder-LIste (aktualisiert)
							- Ais Stakehopldern die Anforderungsgeber ermitteln
								- Haben Know-How rund um zu entwickelnde Features
								- insb hinsichtrliche betriebswirtschaftlicher Aspekte, die in der SW abgebildet werden sollen
							- Evt. eigene Rolle f√ºr Umgang mit Anforderungen/Anforderungsgebern: Anforderungsmanager. GIbt  es aber in R3ealit√§t nicht
								
					- P.2.3 Stakeholder einsch√§tzen
						- Ziel: Macht und Interessen (Erwartungshaltung) der Stakeholder im Unternehmen bestimmen
						- Grund: Planung der Ma√ünahmen um Stakeholder erfolgreich einzubinden
						- Macht anhand der verschiedenen Machtkriterien und ihrer Geweichtung ermittelbar
							- Formale Macht (Machtposition, MAchtbefugnis, Hierarchie_
								- Positionsmacht (in der Organisationsstruktur, z.b. Einkauf)
								- Kontrollmacht (Kontrolle √ºber Entscheidungsprozesse)
									- Wie kommen Entscheidungen zustande?
									- Wer beeinflusst die Entscheiodungsfindung?
									- Wer verwaltet den Zugang zu welchen Ressourcen)
							- Ressourcenmacht (Verf√ºgungsmacht √ºber beschr√§kt vorhandene Mittel)
								- z.b. √ºber Mitarbeiterzeit, Rechnerm,...
								- Technologiemacht (Verf√ºgungsgewalt √ºber Technologien)	
								- Welkche Ressouyrcen werden im Projekt ben√∂tigt?
								- Wie werden Ressourcen zugeteilt?
								- Wer hat bei der ZZuteilung von Ressourcen ein Vetrorecht?
							-  Pers√∂nliche St√§rke (Identit√§t)
								- Wer pr√§gt die zentralen Werte des Projektumfeldes?
								- Wer steht hinter den vom Projekt betroffenen Prozessen und Strukturen
							- Wissens- und INformationsmacht
							- ...
						- Methoden, Werkzeuge, Techniken 							
							- Einzelgespr√§che, Workshops,..
							- Power-Interest-Matrix
								- zur Bestimmung eines Wertes f√ºr die Macht eines Stakeholders
								- Matrix/Tabelle f√ºr jeden Stakeholder erstellen. Spalten: Kriterium; Gewichtung; Punktzahl; Ergebnis.    Zeilen: Kriterien, footer: Ergebnis Einsch√§tzung Macht
									- 1. Relevante Machtkriterien ausw√§hlen
									- 2. Ausgew√§hlte Kriterien in Bezxug auf Projektumfeld gewichten
										- Mehr/weniger nach Gef√ºhl
									- bsp. Formale Autorit√§t: Gewichtung 0.5;  Positionsmacht: GEwichtung 0.2, Technologiemacht: Gewichtung 0.2; Pers√∂nliche St√§rke: Gewichtung 0.1
									- 3. F√ºr jedes Kriterium 1 (niedrig) bis 4 (sehr hoch) punkte vergeben
								 - 	- Punktzahl mit gewichtung jew multiplizieren und in ergebnisspal te eintragen. un footerzeile ergebnisse zusammenaddieren
									- In Blasen diagramm visualisieren
										- x-AchseL Interesse eines Stakeholders am Projekt (unabh√§ngig davcon ob positiv oder negativ) 
											- Ermittelt aus Gespr√§chen, Workshops,...
											- Skala 1 bis 4
										- y-Achse: Machtwert
										- Gr√∂√üe der Blasen: Beeinflussbarkeit der Stakeholder (gro√ü: einfach beeinflussbar)
										- Blitz um negatives Interesse zu  indizieren
										- Aufteinlung in 4 Quadranten: 
											- Gesetzte (hohe Macht, geringes Interesse)
												- Meist Auftraggeber, da dieser meist viel Projekte hat
												- positives I: Untesrt√ºtzt das Projekt aufgrund seiner Aufgabe oder Rolle und leistet deshalb seinen Betirag
												- negatives I: M√ºsste eigentlich Projekt aufgrund seiner Auvfgaben/Rollen unterst√ºtzen, versucht dies aber zu umgehen, z.b. durch Ausreden f√ºr seine nicht-Beteiligung
											- Spielmacher (Hohe macht, gro√ües interesse)
												- positives I: Beteiligt sich aktiv und ist von gro√üer Bedeutung f√ºr den erfolg
												- negatives I: Beteiligt sich aktiuv am Projekt, versuch tdabei aber das Projekt auf den von ihm angestrebten Weg umzupolen
											- Statisten (Geringe Macht, kleines Interesse)
												- positives-, negatives I.: Verh√§lt sich neutral, beeinflusst das Projekt weder positiv noch negativ
											- Joker (Geringe Macht, hohes interesse)
												- positives I: HAt Interessen am Projekt, ist jedoch nicht unmittelbar aktiv. KKann durch geschicktes Einbinden zum Projekterfikg beitragen
												- negatives I: Hat gro-es, jedoch verdecktes negatives Interesse. Beobachtet Projekt eher aus der ferne
									- 
						- Ausgangsartefakt: 
							- Stakeholder Matrix
							- Erg√§nzung der Stakeholder-Liste um die Ergebnisse der einsch√§tzung ihrer Macht und Interesse. 
								- Subjektive gr√∂√üe. 
								- Kein Selbstzweck, sondern dient der planung der Ma√ünahmen
					- P.2.4 Ma√ünahmen planen
						- Methoden, Werkzeuge
							- Tabellen Zielvorgaben f√ºr Kommunikation (Spalten: Stakeholder-Einordnung, Verhalten (siehe P.2.3), Zielvorgabe/Kommunikation) mit Stakeholdern mit
								- positiven Interesse am Projekt		
									- Statist;..; Sehr geringer Aufwand
									- Joker;...; Informiert halten/bearbeiten
									- Gesetzter;...; Zufrieden halten
									- Spielmacher;...; Aktiv/eng bearbeiten/einbinden
								- negativen Interesse am Projekt 
									- Statist;..; Sehr geringer Aufwand
									- Joker;...; Aktiv/eng bearbeiten/einbinden 
									- Gesetzter;...; Aktiv/eng bearbeiten/einbinden
									- Spielmacher;...; Aktiv/eng bearbeiten/einbinden
						- Ausgangsartefakt: Erg√§nzung des PMP um Kummunikationsplan
							- z.b. tabelarisch: 
								- Spalten:  Zielvorgabe, Frequenz, Medium, Inhalte
								- bsp: Sehr geringer Aufwand; Meilensteinbezogen; Newsletter, Intranet; Allgemeine Produktinformationen
									Informiert halten Regelm¬®√§√üig nach Absprache, themenbezogen; Newsletter, WOrkshop, INformationsveranstalltung; Themenm, die die Stakehoplder betreffen, Statusiformationen
									Zufirieden halten; Regelm√§√üig, Intervalle nach absprache; Pers√∂nliche Gespr√§che, email; Definierte Statusinformatinoen
	 								Eng bearbeiten/einbinden; w√∂chentlich; pers√∂nliche gespr√§che, email, worksho; Vision, detailierte Status- und Protokollinformatinoen
							- Ziel: nicht: Stakehoolder formen. sondern: wertsch√§tzende Beziehung aufbauen
								- durch Transparenze (kommunizieren was immer m√∂glich)  
				- P.3 Anforderungsliste erstellen
					- Anforderungen (angemessen) detaillieren und priorisieren
					- Alle bekannten funktionalen und nicht funktionalen Anforderungen zur Erreichuing des Projektziels, sowie Arbeitsergebbnnisse, die zur Erreichung der Projektziele erbracht werden m√ºssen. 
					- Auftraggeber legen Priorit√§ten fest
					- Am besten tabellarisch, daf√ºr Softwarewerkzeuge zu empfehlen
					- in PITPM kein bestreben die Anforderungsliste zu Projektbeginn umfassen dund pr√§zise zu vervollst√§ndigen und erst anschlie√üend mit SW-Entwicklung zu beginnen.
 					  sondern: Anforderungsbestimmung mit der SW=Entwicklung verzahnt. Anforderungsliste wird im ges. SW-Entwicklungsprozess weiterentwickelt
					- P.3.1 Anforderungen erheben
						- Eingangsartefakte:
							- Projektumfangsbeschreibung
							- Anforderungsliste
							- Aufwandssch√§tzung
							- Projektmanagementplan
						- Methoden:
							- Anforderungsworkshops
								- Potenzielle Teilnehmer: Pm, Entwicklungsteam (sollem gleich mitverstehen und evt fragen srtellen), Endanwender, weitere Stakeholder
								- Geemeinsam Anforderungen in Form von Usder Stories und/oder Use Cases erfassen
								- Karteikarten umm aktive Mitarbeit zu erm;glichen und f√ºr leichte Gruppierung von anforderungen
								- Ziel: Gemeinsames Verst√§ndnis √ºberAnforderungen bei allen Stakeholdern
								- Evt. unterscheiden:L MUSS-, KANN- und DARF-NICHT-Anforderungen
							- Experteninterviews
							- Teilnehmende Beobachtung
							- Durchsicht bestehender Dokumente
							- Bei Erhebung: Anforderungen als User Stories oder Use Cases erfassen
								- Beschreiben Systemfunktionalit√§ten aus Sicht der sp√§teren Anwender
								- User Stories: Siehe Projektvorbereitung
								- Use Case (Anwendungsfall)
									- aus objektorientiertertr SW-Entwicklung
									- B√ºndelt alle m√∂gliuchen Szenarien, die eintreten k√∂nnen, wenn ein Akteur versucht, miut Hilfe des betrachteten Systems ein bestimmtes fachlichyes Ziel (business goal) zu erreichen
									- grafisch repr√§sentiert durch UML-Anwendungsfalldiagramm
										(- Au√üen akteure (strichm√§nnchen), innerhalb der System Boundary Use Cases (kreise, enthalten nur bezueichnugn), Striche von akteuren zu use cases . Beziehungen (z.b. <<extend>>) zw use cases)
									- Kann zusammenhang f√ºr menge von User Stories darstellen
						- Ausgangsartefakt: Anforderungsliste (aktualisiert)
							- enth√§llt alle bekannten funktionalen und nicht funktionalen Anforderungen
								- daf√ºr zugriff auf alle beisher erstellten Dokumente
								- funktionale Anforderungen
									- siehe vorbereitungsphase
									- Benutzeranforderungen: Aus benutzersicht, auf h√∂heren Abstraktionsniveau
										- z.; Anmeldung zum entwickelnden System muss passwortgesch√ºtzt sein
										- zuerst
									- Systemanforderungen:
	 									- Beschreibung der Benutzeranforderungenj auf feingranularem m√∂glichst pr√§zisem Niveau
										- z.b. Beschreibung welche L√§nge und welche Sonderzeichehn im Passwwoirt zul√§ssig/gefordert sind
										- erst wenn wirklich implementieren wollen (wegen m√∂glichkeit, dass die anforderung doch noch wegf√§llt)
											- oft sinnvoll vor kurz vor der Iteration in der eine benutzeranforderung umgesetzt wertden soll die zugeh√∂rigen Systemmanforderungen zu beschreiben
							
					- P.3.2 Anforderungsliste priorisieren
						- Ausgangsartefakt: Anforderungsliste (aktualisiert)
							- Anforderungsliste ist priorisiert (zuerst umzusetzendes am h√∂chsten
								- Wichige Anforderungen sind son aufjedenfall im system und k√∂nne fr√ºhzeitig genutzt werden
								- k√∂nnen fr√ºhzeitig validiert werden (anforderungen richtig verstanden?)
								- Konzentration auf Detaillierung der wichtigen Anforderungen. (Niedrig priorisierte erst sp√§ter detailieren)
								- Team lernt fr¬®hzeitig diue f√ºr wirtschaftlichen Erfolg entscheidenden Anforderungen kennen
								- Kriterien der Priorisierung
									- Wertt und Nutzenbetrachtung
										- Welcher Mehrwert wird durch Umsetzung einer Anforderung geschaffen?
										- Auch in Hinsicht auf weiteren Projektverlauf (Wissen generieren)
									- Risikobetrachtung
										- Werden durch Umsetzung einer Anforderung Risiken beseitigt oder minimiert?
											- Risikliste aus Vorbereitungsphase regelm√§√üig √ºberarbeiten
									- Kostenbetrachtung
										- Was kostet die Umsetzyunge inerAnforderung? (gesch√§tzt)
									(- Sinnvolle priorisierung oft nicht leicht zu finden, daf√ºr gibt es Modelkle, z.b. Kano-Modell)
					- P.3.3 Anforderungsliste fertigstellen
						- Ausgangsartefakt: Anforderungsliste (aktualisiert)
							- Qualit√§t der einzelnen Anforderungen nochmal √ºberpr√ºft
								- z.b. durch Qualit√§tsmerkmale INVELST
									- Independent (unabh√§ngig): unabh√§gig voneinander, in bel. Reihenfolge umsetzbar. Daf√ºr minimieren. --> Flexibilit√§t im SW-Entwicklungsprozess
									- Negotioable (verhandelbar): Solange nicht Teil einer laufenden Iteration k;nnen Anforderungen ge√§ndert oder ersetzt werden
									- Value (n√ºtzlich(): m√ºssen Nutzen f√ºr Kunde/Enedanwender darstellen
									- Estimable (sch√§tzbar): von Team in Hinbliock auf Umsetzungsaufwand sch√§tzbar. daf√ºr so beschrieben, dass von Team vollst√§ndig verstanden
									- Small (klein): sukzessive so zerlegt, dass i einer Iteration bearbeitbar. --> Verst√§ndnis erh√∂ht, k√∂nnen pr√§zieser gsch√§tzt werden
									- Testable (testbar): derart testbar, dass sie objektiuv freigegeben und extern vom Auftraggeber abgenommen werrden k√∂nnen
								- falls vorhaneden von Anforderungsmanager
							- Anforderungsliste ist jetzt hinreichend detailliert, priorisiert und qualit√§tsgesichert
				- P.4 Release- und Itereationsplan entwickeln
					- Gesamtprojekt in grobe Iterationen und Releases heruntrerbrechen
					- Iteratives Vorgehen
						- Iteration: Prozess mehrfachen wiederholens gleicher oder √§hnliche rHandlungen zur Ann√§herung an eine L√∂sung oder ein bestimmtes Ziel
						- Dem Kunde so schnell wie m√∂glich konkreten nutzen, die QUalit√§t und  den Mehrwert der SW deutlich machen durch iteratives vorgehen, anhand lauff√§higer (evtl sogar einstzf√§higer) versionen
					- Notwendig, da sonst kaum m√∂glich das SW-Entwicklungsprojekt
						- vorrausschauend zu steuern
						- wichtige Entscheidungen bewusst/fundiert zu treffen
						- Funktionalit√§t der Anwendung, Fertigstellungstermin und anfallende Kosten miteinander in Einklang zu bringen
					- SChafft Transparenz und ein gemeinsams Verst√§ndnis der Reihenfolge
					- P.4.1 Release- und Iterationsplan entwickeln
						- Eingangsartefakte:
							- Projektumfangsbeschreibung
							- Anforderungsliste
							- Aufwandssch√§tzung
							- Projektmanagementplan
						- Ausgangsartefakt: Release- und Iterationsplan
							- Plan, der bestimmt in welchem groben Zeitrahmen die identifizierten Anforderungen umgesetzt werden
							- wieviele Iterationen ben√∂tigt werden
							- Von wann bis wann die einzelnen Iterationen dauern
							- Wann welche Anforderungen aus der RAnforderungsliste voraussichtlich umgesetzt werden
							- Wann Softwarereleases ausgeliefert und beim Auftraggeber in Betrieb geno0mmen werden
							- Idr kein endg¬®ltiges Dkument
								- Muss nach jeder Iteration (in Abstimmung mit AUftraggeber) aktualisiert unnd ggf erweitert werden. 
								- z.b. wenn Aufw√§nde zur Umsetzung von Anforderungen durch Verfeinern, Hinzuf√ºgen oder Streichen ver√§ndertt werden. (ebenso wird dann die Aufwandssch¬®tzung angepasst)
								- z.b. wenn Performanz/Entwicklungsgeschwindigkeit gr√∂√üer/kleiner als erartet ist
							- Beispiel: Tabelle, Spalte f√ºr jede iteration. Zeilen: Starttermin, Endtermin, Anz Arbeitstage (Werktage, unabh davon ob das ganze team daran arbeitet),. Iterationsziele. Explorative Iteration, Anforderungs-IDs, Kommentare
								- Iteration 1: 11. M√§rz 2013; 29. M√§rz 2013; 14; Risiken der DB-Anbindung pr√ºfenl ja; 13-15, 17, 18, 20l Karfreitag am letzten Tag der Iteration
								- Iteration 2:  2. April 2013; 26. April 2013l; 19; Thema A fertiggestellt; nein; 21-25, 27, 29-34, 36; Installation bei AVG in der Folgewoche
						- Explorative Iteration
							- Zum erwerben von notowendigen Kenntnissen und Erfahrungen im Umgang mit neuen Technologien
							- Experimente: Risiken identifizieren oder Faragenm/Unklarheiten beseitigen
							- Idr zu Beginn des Projektes und k√ºrzer als die anderen
							- Ziel: nicht: lauff√§hige Version der SW entwickeln, sondern: Wissens- und Erkenntnisgewinn
							- Ma√ü der UNsicherheit bestimmt Notwendigkeit. 
							- Will Kunde meist nichtzahlen, ausser er hat z.b. eine schlecht beschriebene eigene Schnittstelle
						-  Manchmal verzicht in agil ausgerichteten SW-Entwicklungsprojektenb 
							- kurzfristige Planung von Iteration zu Iteration
							- spez bei k√ºrzeren, unkritischen Projekten
						- Dauer Iterationen:
							- 3-5 WOchen (heute oft auch k√ºrzer)
							- m√∂glicht gleichebleibend (giechm√§√üiger Arbeitsflow. Gute Sch√§tzbarkeit wieviele Storypoints das Team ori Woche umgesetzt bekommt)
							- evtl bei kritischen Proujekten zu Beginn m√∂glcghst kurze Iterationen (1-2 Wochen)
						- Sherr verschachtelt mit P.5, da die Abh√§ngigkeiten der Anforderungen bbekannt sein m√ºssen

				- P.5 Projektplan erstellen
					- Wann was machen. (nicht: Projektmanagementplan: wie)
					- Dejn Plan f√ºr das Gesamtprojekt erstellen und Ressourcen planen (Projektplan)
						- Nicht shr genau spezifiziert
						- wichtigste Meilensteine (z.b. Releases, Pr√§sentationen, Iterationen, Projektende
						- Festlegung von Vorg√§ngen und Meilensteienen einschlie√ülich ihrer zeitlichen Zusammenh√§nge, Uzordnungen von Ressourcen und Kosten, sowie termintreue oder kapazit√§tentreue Durchrechnung der Planung
					- P.5.1 Basis-Projektplan erstellen 
# Ab hier (VL 7, s. 25) gr√∂ber
						- Eingangsartefakte: 
							- Iterationsplan
						- M√∂glicher Zwuschenschritt: PRojektstrukturplan (Work Breakdown Struxure WBS)
							- eher obsolet, da auch die grobe Anforderungsliste gute Basis fuur erstellung des Projektplans ist
							- Bei Agieren vorgehen geht n  ja von √Ñnderungen aus, weshalb die zerlegung nach WBS teilweise verschwendete arbeit ist
							- Anforderungen in handhabbare (von Perso/Gruppe in begrenztem Zeitrahmen durchf√ºhrbar) Komponenten (Aufgaben) herunterbrechen.
							- Hierarchische Zerlegung des Projektproduktes (Baum)
								- In Bl√§ttern: ARbeitspakte, denen m√∂glichst eine verantwortliche Person zugewiesen werden k√∂nnen (zielgr¬®√∏o√üe der Pakete: 2-8 Personentage
									- meist paralel m√∂glich
								- Wurzel: Projekt, Sonstige Knoten: Teilaufgabe
								- M√∂glichekiten der AUfgabenzerlegung (obsolet): Funktionsorientierte Gliederung (art der T√§tigkeit/Unternehmensfunktionen), Objektorientierte Gliederung (Projekt), Phasenorientierte/Zeitorientierte Gliederung, Mischformen
						- Vorgehen:
							- Teilprojektleiter einbeziehen
							- bisher gesammelte INformationen verwenden 
								- Iterationsplan	
								- Grobanforderungen
							- evt. Zerlegung in Arbeitspakete WBS
							- Projektplanungssoftware nutzen (z.b. MS Project, ProjectLibre)
							- Priorit√§ten ber√ºcksichtigen
							- Abh√§ngigkeiten ber√ºcksichtigen
						- Ausgangsartefakt: Ganzheitlicher Projektploan, um
							- Informationen, wie Arbeit zu organisieren, inkl zeitlicher Dimension
								- Alle zentralen Termine
							- neben Arbeitspaketen auch Zusammenh√§nge und damit zeitlichen Ablauf und Sequenz einzelner pakete
							- Kriterien an Projektplan
								- Stringenz *einheitliches SChema, wiederholende Phasen gleich aufbauen, Arbeitspakete sprechend benennen)
								- Realismus
								- √úbersichtlichkeit
								- Granularit√§t (Unterste EBene der Arbeitspakete sollte so fein sein, dass verstenndlich, dennoch so grob, dass Reporting darauf sinnvoll ist
					- P.5.2 Ressourcen planen
						- Eingangsartefakte:
							- Arbeitskalender und Verf√ºgbarkeiten
						- Projektplanungssofware wie MS Project hilft:
							- Aufgaben hei√üen in MS Project Vorg√§nge
									- 3 Vorgangsarten
										- Feste Dauer
										- Feste EInheiten
										- Feste Arbeit
									- Dauer: Zeitliches Intervall zw Anfang und ENde des Vorgangs
										- Default: Dauer = Arbeit/Ressourcen-Einheiten
									- Einheit: Wie vielw Aufwand eine Ressource relativ zur Dauer auf einen VOrgang leisten soll (%)
									- ArbeitL Aufwand gemessen in Zeiteinheiten
									- Tabellem, jew. Vorgangsname, Arbeit, Dauer, VOrg√§nger,...
-										Gant Diagramm stelt due abh dann mit zeitskala dar
								- Darstllung der Abh√§ngigkeiten ohne ZeitSkala ist ein Netzplan 
									- dabei Kritische Pfade in rot dargestelllt. Blau, wo zeitliche pufer vorhanden sind
									- Kriticher Pfad: 
										- Abfolge vin Vorg√§ngen und Meilensteinen, die die Mindestprojektdauer bestimmen
										- Vorg√§nge auf kritischen Pfad sind voneinander abh und haben keinen zeitlichen Puffer
										- mehrere m√∂glich
								- alles eingetragen, dann Automatisierung von MS PRojekct:
									- Ressourcenabgleich:Beteiligung jeder Ressource an Afgaben so reduziert, dass nicht durch gleichzeitigeAufgaben √ºberlastet
									- Berechnung kritischer Pfade
								- verwaltet auch kompliziertere Situationen, wie z.b. ungleichm√§√üige Verf√ºgbarkeit von Ressoourcen, Zeitliche Randbedingunen einzelner AUfgaben, Zuordnuungspriori√§ten,...
						- In praxis eherL Grobe planung ohne Werkzeig gut √ºberblickbar. F√ºr feine Planung funktioniert das Werkzeug nicht gut genug
							- Umfang manacher AUfgaben ungewiss, h√§ngt auch davon ab wer sie erledigt
							- St√∂runge nn im Ablauf wodurch das st√§ndige Umplanenviel zu aufw√§ndig wird
							- kleinerere/mitkere Projekte verwenden daher selten MS Projects, weil sich derAufwand nicht lohnt
						- Ausgangsartefakte:
							- Ganzheitlicher Projektplan (aktualisiert)
								- beinhaltet Ressourcenplanung
								- F√ºr jedes Arbeitspaket fr√ºhester/sp√§tester Anfang/Ende, um Personalengp√§ssezu vermeiden
							- Rollen-/Aktivit√§tsmatrix
				- Kontrollpunkt K3: Projektplanung abgeniommen
					- Bedingung: Gesamtprojektplanung mit Ber√ºcksichtigung der Releasetermine wurde erstellt und vm Auftraggeber abgenommen
					- Man hat jetzt klaren Fahrplan *der abgenommen werden sollte inkl	
						- Prozesse zum Anforderungungsmanagement
						- Erhobenen Anforderungen, zumindest soweit, dass Detailplanung und mittelbarer Umsetzung m√∂glich
						- Risikomanagementplanung *inkl erstem Risikooworksho)
						- Qualit√§tssicherungsplanung
						- Kommunikationsplanung
						- Beschaffungsplanung
						- Projekt- und Kostenplan
							
		- Durchf√ºhrung
			- Praktische Umsetzung des Projekts (Entwicklung)
			- Umsetzung der Anforderungen (im Rahmen des PM-Plans)
			- Optional: in Iterationschleifen (bsp: It1: Protoyp, It2: Release 1.0, ...)
				- f√ºr die meisten Projekte iteratives vorgehen empfohlen
				- Vor jeder Iteratuion: Menge der umzusetzenden Anfoderungen wird Feinspezifikation unterzogen
				- In jeder Iteration: Anforderungen werden umgesetzt
				- Am ende jeder Iteration
					- Ergebnis mit urspr√ºnglicher Planung verglichen
					- Ergebnis wird Kunde pr√§sentiert und zur Verf√ºgung gestellt (falls Releaser)
					- Die Abgeschlossene Iteration wird analzsiert *Produkt sowie Prozess)
					- n√§chste Iteration wird geplant (falls nicht am ende)
					- Kontrollpunkt K4 Planung der Iteration abgenommen
						- Abnahme bezieht sich auf Anforderungen
						- kann je nach Vertragsform durch verschiednee Gremien erfolgen. 
					- Kontrollpunkt K5 Bereitstellung zur Abnahme
						- Release oider Enpprodukt ist auf Sicht des Auftragnehmers fertig (ggf inkl Dokumentation, SChulungsunterlagen, ...
			- Steuerung der Projektprozesse
			- PM steuert anhand des definierten PLans
				- √úberwachung und F¬®hrung 
					- Kommunikationsmanagementl Konfliktmanagement; Proiikollieriung...
				- Reaktion in verschiedenen Situationen
					- Verfehlungen hinsichtlich
						- Sach-, Termin-, Kosten- oder Qualit√§tsziel
					- Interpersonelle (zw Mitarbeitern) oder Intrapersonelle (bei einzelnen Mitarbeitern) Probleme
				- Steuernder EIngriff muss dokumentiert und ggf mit dem AUftraggeber auf basis einer RIsikoanalyse abgestimmt werden
			- Endet mit Abnahme des Liefergegenstadndes (Relesase oder Endprodukt)
				- z.b. nur eine einfache L√∂sung baue
				- Code, DOkumentation, Konfigurationsdateien, Tests,...
			- Prozesse (und deren Aktivit√§ten) :
				- D.1 Teams bilden und Aufgaben zuweisen
					- min2 Mitglieder
					- Struktur des Teams ist aufgaben und Zielorientiert beschriebe
					- Entwicklung der Gruppe hin zum Team
						- Sinnvolle Koordiniation von Teilaufgaben. Ber√ºcxksichtigung der individuellen Fertigkeiten und Kenntnisse
						- Ausgepr√§gtes Verantwortungsbewusstsein aller Mitglieder
						- HArtn√§ckige Zielorientierung
						- Gegenseitiges Anspornen
				- D.2 Projektteam steuern
				- D.3 Projektumfang kontrollieren und anpassen 
				- D.4 Feinspezxifikation f√ºr Iteration erstellen
					- Es wird Menge von Anforderungen mit folgenden Eigenschaften f√ºr Iteration auisgew√§hlt.
						- Hoch priorisiert
						- Inhaltlich zusammengeh√∂rend
						- Technische zueinander kompatibel
					- Feinspezifikaiton der zwar priorisierten aber noch eher vage formulierten Anfoprderungen notwendig
					- D.4.1 FGeinspezifikation f¬®¬®r Iteration erstellen
						- Ausgangsartefakte:
							- Abnahmetestf√§lle
								- Vorbedingungen
								- zu pr√ºfende TRestobjekte
								- Eingabedaten
								- Schritte der Testdurchf√ºhrung
								- Erwartete Etgebnisse
								- Erwartete NAchbedingungen
								- Ans√§tze
									- Anforderungsbasiertes Testen
									- √Ñquivalenzklassentest
										- √Ñquivalenzklasse: Gruppe von Daten mit gleic hen Eigtenschaften. z.b. negative Werte, Namen mit weniger als 31 Zeicfhen,...
									- Strukturtests
									- Abnahmetests
								- Unterteilung in Positivtests und Negativtests (Robustheitstests
								- Hilft noch einmal die Anforderungen zu pr√§zisieren
							- Feinspezifikation
								- Use-Case-Diagramm bzw. Iser Stories
								- Textuelle Beschreibubung und Erleuterungen
								- √úbderfu¬®hrung der Benutzeranforderungen in m√∂glichst implementierungsnahe Systemanforderungen

				- D.5 Feinstpezifikation technisch abnehmen
					- von Softwarearchitekten
					- Kontrollpunkt K4 Planung der Iteratino abgenommen (siehe oben)
				- D.6 Projektkommunikation steuern 
				- D.7 Risiken √ºberwachen
				- D.8 Zulieferung steuern
				- D.9 Software entwickerln
				- D.10 Projektkosten √ºberwachen
					- Zur reinen Kontrolle: L:eistungsreporte mit den Verbrauchsdaten
							- Jedes Teammitglied verbucht seine erbrachten Aufw√§nde
								- diese k√∂nnen mit Kostenplan ins verh√§ltnis gesetzt werden
							- Antwort zu: Wurden Auw√§nde wie geplant erbracht?
							- Diagramm Projektkosten/Zeit. gestrichelte Liniie:plan der Kosten
	q					- Analyse der Kosten in Hinblik auf weitere Aspekte (z.b. restaufw√§nde) macht Projektzustasnd sichtbar. Hier wird periodischer Leistungsreport erstellt
					- D.10.1 Projektkostendaten erfassen
						- Zus√§tzlich zu Erfassung der geleisteten Aufw√§nde wird AUssage √ºber Fertigstellungsgerad ben√∂ptigt
						- Man l√§sst Mitarbeiter den Restaufwand sch√§tzen
							- umgekehrte denkweise, da sonst zu optimistisch
							- nebeneffet: Mitarbeiter m√ºssen restlichje AUfgaben im detail durchdenken		
						- Ergebnisartefakt: Earned value Report (Entwurf)
							- Entwurf einer Aktualisierten Earned-Value-Analyse
							- Inkl Summierung aller angefallenen Aufw√§nde zum stichtag
					- D.10.2 Projektkosten aktualisieren
						- PM aktualisiert alle Verbrauchs- und Sch√§tzzahlen
							- ergibt sich dadurch f√ºrs projekt bedrohliche situaition
								- in Statusbericht dokumentiert und evtl Change-Requests ableiten
						- Earned-Value-Analyse
							- INsturment zur √úberwachung uind Steuerung des Projektvortschritts
							- integrierte Betrachtung von Kosten, Zewit und Leistung (also alle zusammmen)
							- f√ºr bestimmte Aufgabe (z.b. Projekt, Teilprojekt, Arbeitspaket(, zu bestimmten Zeitpunkt
							- Zur Berechnung sind die  Plan und Istwerte, sowie wenn vorhanden die gesch√§tzten Restaufwende notwendung
							- Aus EVA k√∂nnen prognosen f√ºr erwartete Gesamtkosten und Ferttigstellungszeitpunkt abgeleitet werden
							- diveerser projektrelevante Kennzahlen (z.b. CPI, SPI), die als Indikator f√ºr fr√ºhwarnsystem genutzt werden k√∂nnen
							- Warum?
								- Projektmanagement bn√∂tigt antwort auf fragen wie
									- aktuelle Ist-Kosten geriner als Plan-Kosten.. Projekt gut oder hinter defininertem Zeitplan?
									- Vorraussichtliche Kosten des Projektes bei Projektende innerhalb Budget?
									- Wie effizient werden zewit und Ressourcen genutzt?
									- Wie gro√ü wird Profit bzw. der ROI am Ende des Projekts sein?
							-  Grundvoraussetzungen
								- Projektumfange ist fgestgelegt uynd abgegrenzt
								- Erforderlkiche Arbeitspakete sind ermittelt
									- Ergebinisse so dfiniert, dass sie a√ºberpr√ºft werden k√∂nnen
								- Abh√§ngigkeiten undter arbeitspaketen, sowie Reihenfolge ist festgestekkt/festgelegt
								- Dauer und Aufwand pro Arbeitspaket ist gesch√§tzt
								- Kosten- und Terminplan ist erstellt
							- nicht m√∂glich, wenn
								- Projektmitarbeiter Aufw√§nde nicth zuverl√§ssig melden
								- Auwandeserfassung nicht bezogen auf Arbeitspoakete erfoklgt
								- zu umfangreiche Arbeitspakete definiert werden
							- Vier Basiswerte
								- Budget at Completion (BAC): Urspr√ºnglich geplante Gesamtkosten des Projekts (oder Arbeitspakets( zum Projektende
								- Planned Value (PV): Planwert zum gegenw√§rtigen Zeitpunkt
								- Actual Cost (AC): Zum Stichtag angefallene Kosten
								- Earned Value (EV): aufgrund des Fertigstellungsgrads der geleisteten Arbeit verdienter Wert
									- Kann maximal der BAC sein, im gegensatz zum AC
								- In Diagram darstellbar mit Cost/Time. BAC ist oben rechts. stichtag markiert mit gestrichelter (vertikaler) linie.
									- kurven sind kostenverl√ºfe, blaue kurve ist die planm√§√üige. Bei stichtag der Planned Value.
									- rote kurve: stats√§chliche kosten. bei stichtag AC
									- gr√ºne kurve: Tast√§chliche Arbeitsleistung.
								- typischerweise tabellarische erfassung
									- pro Arbeitspaket eine zeile
									- alle aufw√§nde auf kosten umgerechnet
									- Spalten:
										- Arbeitspaket-Nr
										- Gesamtbudget (BAC)
											- Festlegung durch Projektstrukturplan
										- geplanter Wert (PV)
											- Festlegung durch Kostenplan (soll(
										- Ist=Kosten (AC)
											- Ablesen vom Kostenplan (ist)(
										- Fertigstellungsgrad (PC)
											- Ermitteln durch Ans√§tze
										- Fertigstellungswert (EV)
											- Berechnen: PC*BAC
								- Verh√§ltnisse der Basisgr√∂√üen um Aussagen √ºber das Projekt zu treffen
									- PV > EV > AC : Hinter dem Termin, unter Budget
									- EV > AC (Unter Budget), EV > PV (Vor Termin)
									- EV < AC (√ºber Budget), EV < PV (hinter dem Termin
										- Wir sind zu teuer, kosten mehr als wir ledisten
									- AC > EV > PV: Vor dem Termin, unter Budget
							- Abgeleitete Gr√∂√üen um AUssagen √ºber Projetkzustand zu machen
								- CV Kostenabweichung (Cost Variance): EV - AC
									- Differenz tatts√§chlicher Fertigstellungswert und tats√§chlich angefanllene Kosten. 
									- negativ: √ºber Budget
									- positiv: unter Budget
								- SV Terminplanabweichung (SChedule Variance): EV - PV
									- Differenz tats√§chlicher Fertigstellungswert und geplante Kosten zu best. Zeitpunkt
									- negativ: hinter Termin
									- positiv: vor Termin
								- CPI Kostenentwicklungsindex (Cost Performance INdex): EV / AC ( = PC * BAC / AC)
									- Indikator f¬®¬®r die Kostenefizienz
									- < 1: negativ (√úberschreitung der gesch√§tzten Kosten
									- >1: positiv (Unterschreitung der gesch¬ß√§tzten  Kosten)
								-  SPI Terminentwicklungsindex (Schedule Performance Index): EV / PV
									- Indikator f√ºr Termineffizienz (Wie weit zeitlich aus dem Plan soll)
									- < 1: negativ (ung√ºnstige situation)
									- >1: positiv (g√ºnstige sitation)
								- Packt man CPI oder SPI in koordianatensystem mit Zeit: wenn mit schrittweise kleiner werdender Amplitude um 1 schwankend in ruhigen bahnen. 
									- Bei tiefpunkten: verbessserungsma√ünahmen
									- Bei hochpunkten: z.b. zum kosten sparen auf ein anderes Projekt angesetzt, da schneller als n√∂tig
									- (firmenspezzifische)Schwellen, wann bereichsleitung oder Gesch√§ftsf√ºhrung informiert wird. 
										- Rot: CPI oder SPI < 0,80
											- Gesch√§ftsf√ºhrung wird informiert
										- Gelb: CPI oder SPI in Intervall [0,80;0,90]
											- Bereichsleitung wird informiert
										- Gr√ºn: CPI oder SPI in INtervall [0,90;1,10]
										- evt. M√∂glichkeiten ausleuchten Change-Reqquests in die wege zu leiten
							- Vorgehen
								- 1. Bestimmen/Festlegen des Stichtages
								- 2. Ablesen des Planned Value PV (durch Summation der einzelnen Arbeitspakete( aus dem Kostenplan zum Stichtag)
								- 3. Feststellen der Actual Cost AC (durch Summation der einzelnen Arbeitspakete) aus der Kosten- oder Aufwandsermittlung zum Stichtag
								- 4. Ermitteln des Fertigstellungsgrads (Percent Complete = PC) (pro Arbeitspaket) zum stichtag
								- 5. Berechnen des Earned Value EV (pro Arbeitspaket): Fertigstellungsgfgrad PC * Budget at Completion BAC
									- Gersamt-EV ergibt sichdurch Summation des EVs
							- Erlaubt wertere Analyse, y.b. Bereichnung der erwarteten Gesamtkosten *EAC(,.


						- Ergebnisartefakt: Earned value Report
							- earned value = verdienter wert
						
				- D.11 Software testen (Wissensgebiet: Qualit√§tsmanagement)
					- D.11.1 Tests durch f√ºhren und protokollieren
					- D.11.2 Tests dokumentieren
						- Eingangsartefakte: Testprotokolle
						- Techniken und Werkzeuge: Trouble-Ticket-System,...
						- Ergebnisartefakte: Testdokumentation
				- D.11 Iteration abschlie√üen und bereitstellen
		- Einf√ºhrung		
			- Entwicklungsarbeit abgeschlossen
			- Abnahme durch Auftraggeber
			- Produktivbetrieb
				- Planung f√ºr den Produktivbetrieb
				- Rollout des Produkts
			- E.1 Einf√ºhrung planen
				- Betriebsmanager
					- Verantwortlicher f√ºr den zuk√ºnftigen Betrieb des Produktes
				- Release-Noites
					- Wurden im Vorfeld bei jedem Release erstellt
					- ehrliche und umf√§ngliche Beschreibung der LKeistungen des Releases (eig auch inkl M√§ngeln und Abweichuiingen)
				- Wird oft weitaus bevor das Produkt fertig ist begonnen um Leerlauf zu vemeiden. 
					- daf√ºr technische Vorraussetzungen rechtzeitig schjaffen
\				- Verantowrllichekeiten f√ºr Planung kl√ºaren
					- idr alleionm PM
					- teilweise auch gemeinsam mit Auftraggeber oider durch AUftraggeber in EIgenregie
				- Verantworliche f√ºr Einf√ºhrung zusammenholen
					- PM sollte Personen, diein Einf√ºhrungsprozess relevante ROlle spieen involvieren (z/b// IT-Betrieb, Benutzermanagement, Marketing,...)
				- Einf√ºhrungsplan erstellen
					- ein kleiner Projektplan
					- auf welchem weg, mit welchen aufeinaner aufbauenden Aktiuvit√§ten, in welchem teminlichen Rahmen
					- Unterscheidung zwischen zwei Prokelttypen
						- Neues Softwareprodukt soll Altanwendung ersetzen
							- Auf einen schla oder sukzessive?
						- Neues Softwareprodukt ersetzt  keine ALtanwendung
					- yuerst Key=User=Group zur verf√ºgung stellen, dann schrittweise allen?
				- Rollout Fenster
					- Bei Kunden, mit gesch√§ftskritischer Infrastruktur ()keine einnahmen solange das system nicht l√§uft)
					- Einfuuhrung in best Zeitfenster
					- Datenmigration erst seehr kurz vor eigentlichem Rollout
						- aber genug zeitlicher Spielraum f√ºr Tests
						- Datena√§nderungen w√§hrend eder Datenmigration m√ºssen erfasst wertden
				- ggf sicherstellen, dass alle zuk√ºnftigen Benutzer geschult sind/werden
				- sicherstellen, dass IT-Betrieb des Kunden den Betrieb der sw (ggf vollst√§ndig) √ºbernehmen kann
					- der eigentli9che Betrieb geh√∂rt nicht mehr zum Betrieb
			- E.2 Abnahmetest durchf√ºhren
				- Paralel zu E.1
				- E.2.1 Abnahmetestbereitschaft erkl√§ren
					- PM k√ºndigt Auftraggeber Bereitschaft zur Abnahme des Liefergegenstande an
						- idr schriftlich, mit vorlauf, damit dieser die AAbnahme vorbereiten kann
				- E.2.2 Abnahmetest koordinieren
					- Kunde √ºberpr√ºft die Vollumf√§nglichkeit
					- Auf basis des Vertragswerks (Projektvertrag, Pflichtenheft, Anfordeungslistm,...)
					- Hierf√ºr werden Abnahmetestf√§lle entwickelt
						- f√ºr jede funktionale und nicht funktionale Anfordeurung bzw. daraus resultierendeverifizierbare Systtemanforderung
						- jew min ein positiver und ein negativer Testfall
						- beschreibung idr textuell
					- damit sp√§ter objektiv und zweifelsfrei √ºberpr√ºfen ob ANforderungen vertragskonform erf√ºllt
					- Unter umst√§nden bereits auf Produktionsumgebuing mit Kopien aus Echtdaten
					- Dokumentation der gefuindenen Fehler
					- KLategorisierung der gefundenen Fehler laut Vertrag oder Projektmanagementplan
						- Wichtigste Kategorie: Abnahmeverhindernde Fehler
							- z.b. Systemfehlstand, ausfalll gesch√§ftskritischer Funktionalit√§ten
							- k√∂nnen weitere Abnahme behindenr
							- m√ºssen idr binnen weniger Stunden behoben werden
					- Test-Kick-Off durchf√ºhren 
						- Zum auftakt der Abnahmephase
						- Stakeholder und Tester mit ystem vertraut macdhen
						- erste ATestf√§lle gemeinsam durchf√ºhren
						- PM klann sicch Bild des Systemeinsatzews verscghaffen und ggf lenkend eingreifen
					- Abnahmetest wird von =Auftraggeber nicht immer system,atisch vorberietet. Was yzu freiem Testen (testen pohne testf√§lle) f√ºhren kann. Das sollte zwar bestandteil derr Abnahme tests sein, aber nicht der einyige, d fehler nur durch Yufall oder erst in produktrion gefunden werden
				- E.2.3 Abnahmetest durchf√ºhren
					- von Kunden durchgef√ºhr
					- im rahmen der vertraglichen Reglungen  (z.b. bzgl L√§nge des Testzeitraums)
					- Fehler werden in einem Defect-Tracking-=Tool oder √ºber anderere definierte Kanaler angegeben
				- E.2.4 Abnahme erkl√§ren
					- Ziel: Projekt abschliue√üen
					- Kunde best√§tigt ,dass Projekt Erfordernuissen entspricht
					- Abschlussrechnung kann gestellt werden
					- Sind in Projektumfangsbeschreibung aufgef√ºhrte Abnahmekriterien sind erf√ºllt, so muss Produkt abgenommen werden
				- E.2.5 Liefergegenstandnachbessern
					- abnahmeverhindernde Defkete (und andere)
					- Evtl im Rahmen eines Risikom anagements R√ºcklagen f√ºr diesen fall gebildet
					- Nachbe3sserungen m√ºssen geplant werden
				- Kontrollpunkt 6 Abnahme erteilt
					- Bedingung: Endprodukt (oder Relaease() ist frei von abnahmeverhindernden Fehlern undwird von Auftraggeber abgenommen
			- E.3 Produkt einf√ºhrenj (Go Live)
				- E.3.1 Produkt einf√ºhren
					- Ziel: Produk ist wie im Einf√ºhrungsplan beschrieben eingef√ºhrt
						- Produktverantwoirtung klann an das IT-Betriebsmanagement des Auftraggebers √ºbergeben werden
					- Vorgehen: Abarbeitung des EInf√ºhrungsplans
						- Alle Vorg√§nge sollten √ºberwacht werden (monitoring)
				- E.3.2 Produktverantwortung abgeben
					- ggf. workshop zur √ºbergabe an betrieb
					- betrieb erh√§lt DOkumentation,n z.b. betriebshandbuch
					- √úbernahme der Produktveranwortung sollte durch Betrieb best√§tigt werden (*zumindest in einer Email)
				- Kontrollpunkt 7 Produktionsstart
					- Offizielle Produktivabnahme
					- Vorraussetzung um Abschlussprozesse im Projekt anzusto√üen (z.b. auspolanen der Teammitglieder)
		- Abschluss
			- Formeller Abschluss des Projekt hinsichtlich
				- Vertr√§gen
				- Dokumentationen
					- Projektdokumentation
					- Softwarehandbuch
					- Werden in dier Praxis oft vernachl√§ssigt
			- Alle Prozesse zu definierten Ende bringen
			- Abschlussbericht
				- Zweck: Kumuliertes Wissen des Projektes zuk√ºnftigen Projekten zur Verf√ºgung stellen
					- Wesntliche Inhalte, Ergebnisse und Erkenntnisse Dritten zug√ºanglich machen
				- Projekt ist beendet, wenmn Abschlussbericht ver√∂ffentlicht ist
			- A.1 Projekt abschlie√üen
				- Steuerung der Prozesse A2-A6
			- A.2 Risikoregister schlie√üen
				- A.2.1 Projekterkenntnisse festhalten
					- Erenntniosse aus Risikomanagement
						- Wie weit waren die im PMP festgelegten Proizesse hilfreich
						- Wo gasb es optimierungsbedarf?
						- Welche Risiken sind eingetreten?
						- Welchye Gegenma√ünahmen wurden eingeleitet
							- welchuye waren erfolgreich, weklche nicht, warum?
				-  A.2.2 Risikoregister schlie√üen
					- falls n√∂tig Register aufr√§umen, damit es anderen OM als Beispiel dienen kann
			- A.3 Teammitglieder ausplanen
				- dabei die Arbeit jedes Mitarbeiters gemeinsam mit ihm bewerten (evt. zsm mit Linienvorgesetzten)
			- A.4 Vertr√§ge beenden
				- zu externen Parnern 
				- Abrechnungen erstellen bzw √ºberpr√ºfen
				- im Projektbericht festhalten
					- feedback zur beschaffung
					- was lief gut/schlecht
					- Mit welchem Dienmstleister wqaren sie zufrieden?
					- wo mussten sie eingreifen, warum?
			- A.5 Projektkostenrechnung abschlie√üen
				- A.5.1 Feedback zu Projektkosten erstellen
					- Feedback zu kosten Controlling
					- inhalltliche  und prozessbezogene Bewertung
						- welche Arbeitspakete wie weit warum von Planung abwichen
						- wie k√∂nnen Folgeprojekte daraus lernen / fehler vermeiden
							- unter wie √ºberscha√§tyungen
						- gab es Schwierigkeiten im Reportiung Prozess?"
			- A.6 Postmortem durchf√ºhren (Zusammenfassen aller erkenntnisse aus projekt) (andere Namen: Projektabschlussworkshop, Kick-out-workshop, TRouchdown-meeting
				- Motivation: 
					- Feedback zu den Prozessen im Projektmanagementplan sammelln
						- was hjat gut/schlecht funktioniert
						- wo prozesse nicht eingehalten
						- was lernt organisation daraus
					- 360Àö Feedback zw PM, Teilprojketleitern, Stakeholdern und Proijketmitartbeitern
					- Ergebnisse in Projektbericht aufgenommen
				- Ablauf
					- idrn Review mit QUalit√§tsmanagemmentprozessen beginnen
						- ziel:L identifizierung von Problem und Fehlerquellen
						- Unterscheiden zw konstruktivem und analytischen Qualit√§tsmanagementprozessen
					- kann im Projektbnericht zu folgenden Inhalten √ºhren 
						- einf√ºhrung neuer Verfahren Methoeden oder Werkzeuge		
						- ver√§nderung der Reihenfolge vopn Prozessaktivit√§ten
						- Definition neuer Rollen/Verantwortlichkeiten
					- Analyse s√§mtlicher Prozesse des Anforderungsmanagements aus drei Perspektioven 
						- Integration und Verst√§ndlichkeit f¬®r Fachabteilungen des Auftraggebers
						- Umsetzbarkeit f√ºr Entrwicklungsabteilung des Auftragnehmers
						- Kundenzufriedenheit mit dem Projektergebnius
					- S√§mtliche Prozesse der SWoftrwareentwicklung analyusieren
		q				- Probleme und Fehlerqwuellen identifizieren
							-Statische Werte einbeziehen
				- Nach Postmortem>: Prozessbericht ferttigstellen. Inkl Projektprofil: Ziele des Projektes und  ob diese erreicht wurden
					- Technische wie auch fachliche Oerspekjtive m¬ß√∂iglich
			- Kontrollpuinkt 8 Projekt beendet
				- Das Projekt ist erst dann ordnungsgem√§√ü beendet, wenn
					- neben abgenommenem Liefergegeenstand eine vollst√§ndige Dokumentation gem√§√ü den Prozessspezifikationen vorliegft
				- Projekt wid letztendlich vom Projektsteuerungsgremium beendet
			
		- Phasen k√∂nnen eng verzahnt sein
			- Durchf√ºhrung und Einf√ºhrung: Einf√ºhrung von Teilergebnissen
			- Nebenl√§ufigkeit von Aktivit√§ten
			- ...
	- 9 Wissensgemiete (organisatorische Einteilung des Projekts in 9 Wissensbereiche)
		- Integrations-  und Teammanagement
			- Integration aller anderen Wissensbereiche (und auc hverschiedener Phasen)
				- Zusammenf√ºhrung aller Anforderungen, Bed√ºrfnisse und anderer Faktoren
				- Koordination von Personen, ROllen, Ressourcen und Prozessen
		- Inhalts- und Umfangsmanagement	
			- Fr√ºhzeitige Begrenzung des Projektumfangsd
				- Abrenzung zu irrelevanten Aufgaben
			- Anforderungs- und Change-Request-Management
				- Prozesse zur Aufnahme, Verwaltung und √úberpr√ºfung von Anforderungen (Wie mit Anforderungen umgegangen wird)	
		- Softwareentwicklungsmanagement
			- Einbindung von Prozessen der Softwareentwickluing in das Projektmanagement (z.b. Prozesse des Softwareentwurfs)
		- Qualit√§tsmanagement
			- Planung, Durchf√ºhrung und Kontrolle von Tests
			- Qualit√§tssicherung 
				- von Projektprozessen
				- von Artefakten und Liefergegenst√§nden
			- Fr√ºhzeitige R√ºckkopplung und INtegration von Qualit√§tsaspekten in allen Projektteilbereichen
			- Prozesse: D.11 (Software testen)
		- Stakeholder- und Kommunikationsmanagement
			- Wer kommuniziert wann mit wem √ºber was in welcher Form (z.b. Projekltstatusberichte)
			- Prozesse: P.2 (Stakeholder analysieren)	
		- Risikomanagement
			- Beschreibung potenzieller RIsiken
			- Vermeindung
			- Bew√§ltigung
		- Zeitmanagement
			- Planung des Projektablaufs (Projektplan)
		- Beschaffungsmanagement
			- Zulieferungen des Kunden oder von Dritten
			- Ressourcen zur Verf√ºgungstellen
		- Kostenmanagement 
			- Sicherstellun der Einhaltung des Projektbudgets
			- Sch√§tzung der Projektkosten (Aufwandssch√§tzung)
			- Reporting
	- Obwohl PITPM phasen hat nicht wasserfallartiges Vorgehensmodell. In Planungsphase wird z.b. festgelegt, welches Prozessmodell diue eigentliche Softwareentwicklung verwenden soll (agil, iterativ-inkrementell,..)
		- PITPM legt iteratives Vorgehen nahe
		- PITPM ist per se keine agile Methode, kann aber agile Methoden inkludieren

- Prozesse (zerlegung des PM in Prozesse, kann also bei obiger untereteilung in Phasen/wissensbereiche eingef√ºgt werden)
	- Prozess: Sequentiell oder nebenl√§ufige Abfolge von Aktivit√§ten
		- Zu jeder Aktivit√§t geh;ren
			- Eingangsartefakte (Dokumente, die zum Start vorliegen m√ºssen)
			- Techniken und Werkzeige (Werden im Rahmen der Aktivit√§t eingesetzt um das Ergebnis zu erstellen)
			- Ergebnisartefakte (Dokumentiert das Ergebnis einer Aktivit√§t)
		- Geh√∂rt jew zu genau einer Phase und einem Wissensbereich
		- Bsp: P.2 Stakeholder analysieren
			- Geh√∂rt zur Planungsphase und in das Wissensgebiet Stakeholder- und Kommunikationsmanagement
			- Besteht aus folgenden Aktivit√§ten
				- P.2.1 Stakeholder indentifizierien
					- Eingangsartefakte: Projektauftrag, Projektorganisation,...
					- Techniken und WErkzeuge: Gespr√§che, Workshops,...
					- Ergebnisartefakte: Stakeholder-Liste
				- P.2.2 Anforderungsgebeer identifizieren
				- P.2.3 Stakeholder einsch√§tyen
				- P.2.4 Ma√ünahmen planen
					
- (Projekt)Kontrollpunkte im Prozess
	- Legen Kriterien f√ºr die Weiterf√ºhrung fest (welche nur m√∂glich ist wenn alle Kriterien erf√ºllt sind
		- Anderenfalls Projekterfolg in Gefahr

--
VL 4

- Projekteinnbindung
	- Eingliederung von Projektteams in die oranisation eines Unternehmens
	- Wo im Unternehmen findet man Mitarbeiter, die die Rollen eines IT=Projets besetzen k√∂nnen? Allgemeiner: Wie k√∂nnen zeitlich befristete PRojekte in eine bestehenede dauerhafte Organisationsstruktur eingebettet werden
	- Aufbauorganisation
		- Bildet das (meistens hierarchische) Ger√ºst einer Organisation (z.b. unternehmen)
		- Legt die Rahmenbedingungen fest (welche Aufgaben von welchen Menschen und Sachmitteln zu bew√§ltigen sind.
		- Def: das statische System der organisatorischen Einheiten einer UNternehmung, das die Zust√§ndigkeiten f√ºr die arbeitsteiliddge (Arbeitsteilung) Erf√ºllung der Unternehmensaufgabe regelt (Organisation)
		- Zur Gestalltung der Aufbauorganisatiuon Spezialisierung (Stellenbildung/Abteilungsbildung), Kompetenzabgrenzung (organisatiorische Einheiten werden voneinander abgegrenzt und durch Handlungsbeziehungen miteinander verkn√ºpft), Leitungssystem (Art der Abgrenzung und Verkn√ºpfung) f√ºhrt zu unterschiedlichen Organiusationsstrukturen
		- Organisationseinheiten
			- Linienstellen: Vertigkal und mit Weisungsbefugnis
				- Instanzen: Stellen Weiusungsbefugnis, F√ºhrungsaufgaben werden ausgef√ºhrt und Entscheidungen getroffen
				- Ausf√ºhrungsstellen: Erhalten von den INstanzen die Weisungen und haben sie umzusetzen
				- Fachspezifische UAfgaben ohne Fremdentscheidungs- und Weisungskompetenzen
				- K√∂nnen auf nahezu allen Ebenenen der Hierarchie eingerichtet werden
			- Stabstellen: Horizontal und ohne Weisungsbefugnis
				- St√§be Sind einer oder mehreren Instanzen zugeordnet, keine Entscheidungs- oder Weisungsbefugnisse, nur Vorschlagssrecht
				- Assistenzen: Keine st√§ndigen sondern nur fallweise Aufgaben, zugeordnet zu Instanz
			- Hauptamtliche Gremien: Haben Weisungsbefugnis:
				- Leitungsgruppen L Gruppe zur Leitung eines Unternehmens (z.b. vorstand der AG)
				- Projektgruppen: Personen aus unterschiedlichen T√§tikeitsbereichen, die zeitlich befristet miteinander Projekte durchf√ºhren
			- Nebenamtliche Gremien: Haben idrkeine WeisungsbefugnisL
				- Kollegiouim: Organisationseinheiten zur Erf√ºollung von Sonderaufggaben, zeitlich befristet
				- Aussch√ºsse: Organisationseinheiten zur Nebenamtlichen Verrichtung von (Dauer-)AUfgaben
			- Bsp: Lenkungsausschuss
				- F√ºr Dauer eines Projektes eingesetzt
				- SChnittstelle zw PM/Projektgruppe und der Unternehmensleitung bzw externen Beratern
				- Aufgaben sind z.b. Treffen von Richtlinienentscheidungfen; Verteilung von Projektbudgets; erufung des PM; Genehmigung von Projekt√§nderungen; Lenkung (nicht Leitung) des Projekts 
		- Linienorganisation
			- Hierarchie in einem Unternehmen mit Linearem Aufbau (Jeder Mitarbeiter erh√§lt seine Weisungen durch eindeutig bestimmten Vorgesetzten
			- Oberste Ebene idr Unternehmensleitung
		- Vorgesetzte
			- Personenm denen innerhalb einer Organisation die Befugnisi erteilt wurde Anordnungen an nachgeordnetes Personal zu erteilen
			- Disziplinarische VOrgesetzte
				- Bestimmen Arbeitseinsatz
				- Bewerten Arbeitsleistung (Mitarbeitergespr√§ch, Arbeitszeugnis,...)
				- Genehmigen Urlaub
				- Ahnden Fehlverhalten (Abmahnung, Entlastung)
			- Fachliche Vorgesetzte
				- Erteilen Anweisungen, die zur Erreichung der Arbeitsergebnisse notwendig sind (Weer macht was. nicht: Mitarbeiter aus Projektteam entfernen)
				- K√∂nnen keine Anweisungen zum Arbeiseinsatz erteilen oder Verweigerung bestrafen
			- h√§ufig beides die selbe Person
		- Projektleiter (PL) vs Projektmanager(PM)
			- z.t. synonyme verwendung. in PITPM nur PM (Wird vom Sponsor beauftragt das Projekt durchzuf√ºhren und erfolgreich abzuschlie√üen
			- PM hat idr umfassendeere Kompetenz..
				- in V-Modekll:
					- PM: Manager, der die Rahmenbedingungen f√ºr die Aktivit√§ten des Submedells festlegt und als oberste Entscheidungsinstanz funktert
					- PL: Verantwortlicherm der die Aufgaben plant, steuert und kontrolliert

		- Projektstrukturen
			- Projhekte m√ºssen an die bestehene Organisationsform angedockt werden
			- Grundlegende Formen der Projektorganisation, die sich hinsichtlich der Befugnisse der Projektleitung unterscheidenL
				- Stab-Projektorganisation
					- Bestehende Organisation bleibt weitestgehend bestehen
					- Projektleiter hat eine Stabstelle und greift f√ºr einzelne AUfgaben auf Ressourcen aus der Linie zur√ºck
						- √úbernimmt koordinierende Aufgaben
						- HJat keine Entscheidungs- oder Weisungsbefugnis (Fachlicje und disziplinarische Komp[etenz verbleibt bei den (Leitern der) Fachabteilungen
					- Vorteile:
						- Mitarbeiteereinsatz ist optimierbar
						- Projekteinf√ºhrung erforderut nur geringe organisatorische √Ñnderungen
					- Nachteile:
						- Wenig Bedeutung, Befugnisse und Einfluss des Projektmanagers (Reduktion  auf Koordniation)
						- Schwierigkeiten der Koordniation bei unterschiedlichen Projekten	
				- Reine Projektorganisation
					- POrojektleiter bekommt f√ºr das Projekt Mitarbeiter aus verschiedenen Abteilungen zugeornet
					- Vollst√§ndige Herausl√∂siung der Mitarbeiter aus ihren Fachabteilungen
						- Unter fachlicher und disziplinarischer F√ºhrung der Projketleitung
							- PM hat Weisungs- und Entscheidungsbefugnis
						- Ausschlie-lich f√ºr das Projekt
						- Zewitlich befristetr
					- Vorteile:
						- Straffe Projektarbeitsform
						- Identifikation der Gruppe mit dem Projekt
						- SChnelle Reaktionszeit
						- Volle Befugnis/Kompetenz des Projektleiters
					- Nachteile: 
						- Projektgruppe in Konkurrenz zur Linie
						- Probleme des Wieedereinsatzes von Projektmitarbeitern in der Fachabtielung
						- Kompetenzen√ºberschreitung des Projektleiters
				- Matrix-Projektorganisation
					- Projektleiter/Projektkoordinator bekommt fachliche Kompetenz (Mitarbeiter unterstehen iohm in Projektragen)  √ºber die dem Projekt zugeordneten Mitarbeiter,. Die Bereichsleitung beh√§llt die disziplinarische Kompetenz
					- Mischform aus reiner und Stabs-Projektorganisation
						- Projektmitglieder werden f√ºr die Dauer des Projektes zum Teil ausder Fachabteilung herausgel√∂st
						- Fachabteilungsleitung und Projektl;eitung arbeiten gelichberechtigt zsm und tragen gemeinsam Projektverantwortung
					- Vorteile:
						- Flexibler Personaleinsatz
							- Sowohl f√ºr Fachabteilungen und Projektmanager
						- Fachabteilungen und Projektmanager vertreten ihr Fachgebiett
						- Ehrer Synergieeffekte
					- Nachteile
						- Hoher AUfwand f√ºr die Kompetenzenabgrenzung/Ergebnisabstiummung
						- Konfliktpotential (PM vs. Fachabteilung)
							- Bestrafung f√ºr schlechte fachliche Arbeit
							- Beurlaubung obwohl dringend f√ºr Aufgabe ben√∂tigt
	- Ablauforganisation
		- Regelt die innerhalb des Rahmens der Aufbauorganisation ablaufenden Arbeits- und INformationsprozesse

- Projektmittel
	- Welche Werkzeuge stehen uns zur Durchf√ºhrung von Projekten zur Verf√ºgung
	- Def: immaterielle und materielle Werkzeuge zur Durchf√ºhrung von projekten und zur Zielererreichung
		- Mittel zur Projektausl√∂sung (z.b. Marketing) sind keine Projekt=mittel
	- M√∂gliche Klassifizierung
		- Vorgaben
			- Projektziele/aufgabenbezogene Vorgaben
			- Gesetze und Verordnungen/Normen (z.b. DIN, ISO)
			- Standards (unternehmensbezogen, branchenbezogen)
		- Modelle
			- Abstraktion: Beschreibung durch etwas Einfacheres, das aber hinsichtlich der relevanten Eigenschaften gleich ist
			- ModellierungL: Eine (geeignete) Abstraktion der Wirklichkeit konstruieren (das Modell)
				- irrelevante Details ignorieren
				- relevante Dertails darstellen
				- was iirelevant/relevant ist h√§ngt vom Zweck des Modells abhn
			- Zeichnungsmodelle
			- Mathematische Modelle )optische Modelle, Simulationsmodelle)
			- Beschreibungsmodelle (Vorgehens-, Referenzmodell)
		- Verfahren
			- Logische Hilfsmittel zur Arbeitsdurchf√ºhrung 
				- Methoden
					- Planungsmethoden (z.b. rollierend)
					- Entscheidungsmethoden (z.b. Nutzwertanalyse)
				- Techniken (Handlungsanweisungen f√ºr Teilaufgaben)
					- z.b. Planungstechniken (z.b. Netzplantechnik)
					- F√ºhrungstechniken (z.b. Delegation von AUfgaben)
		- Tools
			- Softwaregest√ºtzte Verfahren
				- Projekttools: PLlanung, Steuerung und Kontroolevon Ressourcen, Terminen, Kosten (z.b. MS Project, Jira)
			- Allgemein (z.b. Textverarbeitung)
			- Computer Supported
			- Programmiersprachen
		- Ma√ünahmen
			- Ausf√ºhrungserfordernisse im Rahmen der Projektarbeit
				- Motivationsma√ünahmen f√ºr
					- Projektmitarbeiter
					- Vom Projektergebnis Betroffene
			- Informationsma√ünahmen (m√ºndlich, schriftlich, elektronisch)
			- Schulungsma√ünahmen (Kenntnisse, Fertigkeiten, Sozialkompetenz)
		- Sachmittel
			- B√ºroraum
			- Mobilar
			- Kommunikationsmittel
			- B√ºrobedarf
			- EDV-Ausstattung
			- Besprechungsmittel
			- Pausenausstattung


---------------


Klausurinfos

earned values analyse
	= vlt nicht selbst machen. aber definitiv diagramme auswerten. L√§uft das projekt gut. das im verhaeltniss wie sind die kosten dr√ºber/drunter. Aus dem diagramm kann man ablesen ob die kosten gut sind und ob der zeitplan gut ist. 
